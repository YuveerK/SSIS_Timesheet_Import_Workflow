<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="6/5/2025 10:25:14 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="YUVEER"
  DTS:CreatorName="YUVEER\yuvee"
  DTS:DTSID="{68003DA0-72FC-4E54-99F5-70470F1CA6A9}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5685.0"
  DTS:LocaleID="7177"
  DTS:ObjectName="Import Timesheet Data Audit"
  DTS:PackageType="5"
  DTS:VersionBuild="273"
  DTS:VersionGUID="{9BB49AB5-2765-4CC4-A65D-9CF2933F77D2}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Add Execute SQL Task for Employee Insert]"
      DTS:CreationName="ADO.NET:SQL"
      DTS:DTSID="{15244F48-5C34-4A12-BF81-0E333FE2C6AD}"
      DTS:ObjectName="Add Execute SQL Task for Employee Insert">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=YUVEER;Integrated Security=SSPI;Connect Timeout=30;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{CC219075-9A3F-4D5A-A95B-48B4AB51B849}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ConnectionString">"Provider=Microsoft.ACE.OLEDB.12.0;Data Source=" + @[User::ExcelFilePath] + ";Extended Properties=\"Excel 12.0 Xml;HDR=NO\";"</DTS:PropertyExpression>
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::ExcelFilePath]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\SSIS\Timesheets\Employee C\Employee C_Time Sheet_May FINAL.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager 1]"
      DTS:CreationName="EXCEL"
      DTS:DelayValidation="True"
      DTS:DTSID="{4db4efdd-4995-4cdc-be6b-40579d60f446}"
      DTS:ObjectName="Excel Connection Manager 1">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="0"
          DTS:ConnectRetryInterval="0"
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=C:\SSIS\Timesheets\Employee A\Employee A_Time Sheet_May FINAL.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
      DTS:CreationName="OLEDB"
      DTS:DTSID="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
      DTS:ObjectName="YUVEER.SSISTimesheetIntegrationDb">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectRetryCount="1"
          DTS:ConnectRetryInterval="5"
          DTS:ConnectionString="Data Source=YUVEER;Initial Catalog=SSISTimesheetIntegrationDb;Provider=MSOLEDBSQL.1;Integrated Security=SSPI;Application Name=SSIS-Package-{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}YUVEER.SSISTimesheetIntegrationDb;Auto Translate=False;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:LogProviders>
    <DTS:LogProvider
      DTS:ConfigString="YUVEER.SSISTimesheetIntegrationDb"
      DTS:CreationName="Microsoft.LogProviderSQLServer"
      DTS:Description="Writes log entries for events to a SQL Server database"
      DTS:DTSID="{6E031771-7DFB-48CD-9233-603D48C3935E}"
      DTS:ObjectName="SSIS log provider for SQL Server">
      <DTS:ObjectData>
        <InnerObject />
      </DTS:ObjectData>
    </DTS:LogProvider>
  </DTS:LogProviders>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8270CC5C-2091-4C48-B701-254F7702E838}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ContactInformation">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BEE9F410-B57A-4C65-8B50-DDDC2968751D}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeID">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7B918474-1DB6-4751-9507-021DA9E17E68}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmployeeName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{67009459-3694-4D29-827A-C9353A0477B7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelFilePath">
      <DTS:VariableValue
        DTS:DataType="8">C:\SSIS\Timesheets\Employee C\Employee C_Time Sheet_May FINAL.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{309A6B48-526C-44E1-A62A-E7A5252277F1}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelKeySheetSQL">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{85B257BD-D47E-42DE-B71E-36A31CC7C7BD}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ExcelSQL">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7CB3499D-6872-41A3-93EE-4F9BCE55B55B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ExpenseRowUpdated">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{21F7C7C6-F439-4CD1-BBF3-8327CEADEC5F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LeaveRowsUpdated">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EDF2B780-C6E1-4786-8DEC-C68D5E659353}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowInsertClient">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B495BBC6-D1F2-41DD-ADB3-695D3F6D9FE6}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowInsertDescriptions">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{36D04E63-BD71-445D-AC44-D5A6C932F349}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowInsertExpenses">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8F4E5FAA-CF63-40AF-8741-CE33191F7F00}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowInsertLeave">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{39942BE1-B686-430B-A900-43C492BE10C0}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowInsertTimesheet">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{089DBED4-923A-4161-89A6-DDA8A4D4AA5F}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="RowUpdateLeave">
      <DTS:VariableValue
        DTS:DataType="3">1</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{07A3D352-9247-41CA-B2B8-921CE3BCCD49}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SheetName">
      <DTS:VariableValue
        DTS:DataType="8">Key$</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D405366B-0735-431E-A416-9AE0101C32C1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="SkipFile">
      <DTS:VariableValue
        DTS:DataType="11">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A6712589-F035-41A0-9B6E-5EABC66536AA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="SubmissionDate">
      <DTS:VariableValue
        DTS:DataType="7">6/10/2025 12:21:29 AM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D08C9BE8-0250-4071-898A-5C35AC90ECBC}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="TimesheetRowsUpdated">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:LoggingOptions
    DTS:FilterKind="0"
    DTS:LoggingMode="1">
    <DTS:Property
      DTS:DataType="8"
      DTS:Name="EventFilter">4,7,OnError,13,OnPostExecute,12,OnPreExecute,9,OnWarning</DTS:Property>
    <DTS:Property
      DTS:EventName="Diagnostic"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="DiagnosticEx"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnError"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnExecStatusChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnInformation"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePostPrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreComponentCall"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePreEndOfRowset"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelinePrePrimeOutput"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPipelineRowsSent"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPostValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreExecute"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnPreValidate"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnProgress"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnQueryCancel"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnTaskFailed"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnVariableValueChanged"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:Property
      DTS:EventName="OnWarning"
      DTS:Name="ColumnFilter">
      <DTS:Property
        DTS:Name="Computer">-1</DTS:Property>
      <DTS:Property
        DTS:Name="Operator">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceName">-1</DTS:Property>
      <DTS:Property
        DTS:Name="SourceID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="ExecutionID">-1</DTS:Property>
      <DTS:Property
        DTS:Name="MessageText">-1</DTS:Property>
      <DTS:Property
        DTS:Name="DataBytes">-1</DTS:Property>
    </DTS:Property>
    <DTS:SelectedLogProviders>
      <DTS:SelectedLogProvider
        DTS:InstanceID="{6E031771-7DFB-48CD-9233-603D48C3935E}" />
    </DTS:SelectedLogProviders>
  </DTS:LoggingOptions>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Foreach Loop Container"
      DTS:CreationName="STOCK:FOREACHLOOP"
      DTS:Description="Foreach Loop Container"
      DTS:DTSID="{22EB4D9A-953F-43DE-A402-9620598FC013}"
      DTS:ExecutableType="STOCK:FOREACHLOOP"
      DTS:LocaleID="-1"
      DTS:ObjectName="Foreach Loop Container">
      <DTS:ForEachEnumerator
        DTS:CreationName="Microsoft.ForEachFileEnumerator"
        DTS:DTSID="{336B3C10-AC05-4480-9584-A4F4D7E631F3}"
        DTS:ObjectName="{336B3C10-AC05-4480-9584-A4F4D7E631F3}">
        <DTS:ObjectData>
          <ForEachFileEnumeratorProperties>
            <FEFEProperty
              Folder="C:\SSIS\Timesheets" />
            <FEFEProperty
              FileSpec="*.xlsx" />
            <FEFEProperty
              FileNameRetrievalType="0" />
            <FEFEProperty
              Recurse="-1" />
          </ForEachFileEnumeratorProperties>
        </DTS:ObjectData>
      </DTS:ForEachEnumerator>
      <DTS:Variables />
      <DTS:LoggingOptions
        DTS:FilterKind="0" />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Add Updated Default Leave Values to Audit Table FIXED"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{884234f3-5475-4015-bee2-1a924c2be989}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add Updated Default Leave Values to Audit Table FIXED"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog &#xA;(PackageName, TaskName, OperationType, EntityType, [RowCount], FileProcessed, EmployeeID, EmployeeName)&#xA;VALUES (?, 'UpdateLeave', 'Update', 'Leave', ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ExpenseRowUpdated"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Extract Employee from Folder"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:DelayValidation="True"
          DTS:Description="Script Task"
          DTS:DTSID="{D2E5A2A9-1F2D-4B7B-8646-45284898ECC1}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Extract Employee from Folder"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_37baa334941c4fd2ad8513b551ee7f5c"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ExcelFilePath"
              ReadWriteVariables="User::EmployeeName,User::ExcelKeySheetSQL,User::ExcelSQL,User::SheetName">
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_37baa334941c4fd2ad8513b551ee7f5c.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{0fa14400-18d9-43f4-bca1-19a64a88a631}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_37baa334941c4fd2ad8513b551ee7f5c</RootNamespace>
    <AssemblyName>ST_37baa334941c4fd2ad8513b551ee7f5c</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="ScriptTask" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoCommandLine="" DebugInfoWorkingDir="" IconImageList="" />
        <Host Name="ScriptTask" GeneratedNamespace="$safeprojectname" IconIndex=""></Host>
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_37baa334941c4fd2ad8513b551ee7f5c.Properties.Settings.get_Default():ST_37baa334941c4fd2ad8513b551ee7f5c.Properties.Sett" +
    "ings")]

namespace ST_37baa334941c4fd2ad8513b551ee7f5c.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.Data.OleDb;
using System.IO;
using System.Text.RegularExpressions;
using System.Windows.Forms;
#endregion

namespace ST_37baa334941c4fd2ad8513b551ee7f5c
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                /* ----------------------------------------------------
                 * 1.  Paths and employee folder
                 * -------------------------------------------------- */
                string filePath = (string)Dts.Variables["User::ExcelFilePath"].Value;
                string employee = new DirectoryInfo(Path.GetDirectoryName(filePath)).Name;
                Dts.Variables["User::EmployeeName"].Value = employee;

                /* ----------------------------------------------------
                 * 2.  Pick the worksheet that represents the month
                 *     Strategy A: extract month from the FILE NAME
                 * -------------------------------------------------- */
                string fileName = Path.GetFileNameWithoutExtension(filePath);

                // Accept Jan–Dec in any case, even when extra text follows
                Match m = Regex.Match(
                    fileName,
                    @"\b(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\b",
                    RegexOptions.IgnoreCase);

                string monthToken = null;
                string sheetName = null;

                if (m.Success)
                {
                    monthToken = m.Groups[1].Value;    // e.g. "Apr"
                    sheetName = monthToken + "$";     // e.g. "Apr$"
                }
                else
                {
                    /* ------------------------------------------------
                     *  Strategy B: scan workbook tabs until you hit
                     *  the first “real” month sheet that ends with $
                     * ------------------------------------------------ */
                    string connStr =
                        $"Provider=Microsoft.ACE.OLEDB.12.0;" +
                        $"Data Source={filePath};" +
                        $"Extended Properties=\"Excel 12.0;HDR=YES;IMEX=1\";";

                    using (OleDbConnection cn = new OleDbConnection(connStr))
                    {
                        cn.Open();
                        DataTable dt = cn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);

                        foreach (DataRow row in dt.Rows)
                        {
                            string tbl = row["TABLE_NAME"].ToString().Trim('\''); // remove quotes

                            if (!tbl.EndsWith("$")) continue;           // skip hidden charts / ranges

                            string cand = tbl.TrimEnd('$');             // "Apr", "Key", "Expenses" …

                            if (Regex.IsMatch(cand, @"^(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)$",
                                              RegexOptions.IgnoreCase))
                            {
                                sheetName = tbl;                        // keep trailing $
                                monthToken = cand;
                                break;
                            }
                        }
                    }

                    if (sheetName == null)
                        throw new ApplicationException(
                            "No worksheet ending in $ and named like a month (Jan-Dec) was found.");
                }

                Dts.Variables["User::SheetName"].Value = sheetName;

                /* ----------------------------------------------------
                 * 3.  Build the dynamic SQL for the Excel Source
                 * -------------------------------------------------- */
                string sql =
                    $"SELECT * FROM [{sheetName}A9:J100] WHERE F1 <> NULL";

                Dts.Variables["User::ExcelSQL"].Value = sql;


                /* ----------------------------------------------------
                 * 4.  Success
                 * -------------------------------------------------- */

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                /*  ►  Decide how strict you want to be:
                 *     – To SKIP the bad workbook but continue the loop,
                 *       change Failure → Success below.
                 */
                Dts.Events.FireError(
                    0, "Script Task – Set Vars", ex.ToString(), "", 0);

                // MessageBox is handy while debugging; comment out for server runs
                // MessageBox.Show(ex.ToString(), "SCRIPT ERROR");

                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_37baa334941c4fd2ad8513b551ee7f5c</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_37baa334941c4fd2ad8513b551ee7f5c</msb:DisplayName>
    <msb:ProjectId>{13C576DC-ACFF-4A8F-AC7C-1770035814CD}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_37baa334941c4fd2ad8513b551ee7f5c.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_37baa334941c4fd2ad8513b551ee7f5c")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_37baa334941c4fd2ad8513b551ee7f5c")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_37baa334941c4fd2ad8513b551ee7f5c.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_37baa334941c4fd2ad8513b551ee7f5c.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_37baa334941c4fd2ad8513b551ee7f5c.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_37baa334941c4fd2ad8513b551ee7f5c.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_37baa334941c4fd2ad8513b551ee7f5c.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_37baa334941c4fd2ad8513b551ee7f5c.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDANfqSWgAAAAAAAAAAOAAIiALATAAABgAAAAIAAAAAAAA4jYA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAJA2AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA6BYAAAAgAAAAGAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAaAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAIAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADE
NgAAAAAAAEgAAAACAAUAACMAANgSAAABAAAAAAAAANg1AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgDtAQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKdCAAAAEKBigUAAAKcxUAAApvFgAACgsCKBAAAApvEQAACnIpAABwbxIAAAoHbxcAAAoGKBgA
AApyTwAAcBcoGQAACgwUDQhvGgAACiwhCG8bAAAKF28cAAAKbx0AAApyuwAAcCgeAAAKDTjYAAAA
cr8AAHAGch0BAHAoHwAACnMgAAAKEwURBW8hAAAKEQV+IgAAChRvIwAACm8kAAAKbyUAAAoTBitj
EQZvJgAACnQvAAABcoEBAHBvJwAACm8oAAAKF40wAAABJRYfJ51vKQAAChMHEQdyuwAAcG8qAAAK
LCgRBxeNMAAAASUWHySdbysAAAoTCBEIcpcBAHAXKCwAAAosBREHDSsJEQZvLQAACi2U3hURBnUS
AAABEwkRCSwHEQlvLgAACtzeDBEFLAcRBW8uAAAK3AktC3L/AQBwcy8AAAp6AigQAAAKbxEAAApy
igIAcG8SAAAKCW8XAAAKcqoCAHAJcsoCAHAoHwAAChMEAigQAAAKbxEAAApy/gIAcG8SAAAKEQRv
FwAACgIoEAAAChZvMAAACt40EwoCKBAAAApvMQAAChZyHAMAcBEKbygAAApySgMAcBZvMgAACiYC
KBAAAAoXbzAAAAreACoAAABBTAAAAgAAAMAAAABwAAAAMAEAABUAAAAAAAAAAgAAAKAAAACnAAAA
RwEAAAwAAAAAAAAAAAAAAAAAAAC4AQAAuAEAADQAAAATAAABHgIoMwAACioeAig0AAAKKq5+AQAA
BC0eckwDAHDQAwAAAig1AAAKbzYAAApzNwAACoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4D
AAAEKh4CKDgAAAoqLnMIAAAGgAMAAAQqAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAF
AGwAAAAQBQAAI34AAHwFAACgBwAAI1N0cmluZ3MAAAAAHA0AAMADAAAjVVMA3BAAABAAAAAjR1VJ
RAAAAOwQAADsAQAAI0Jsb2IAAAAAAAAAAgAAAVcdogEJAwAAAPoBMwAWAAABAAAANQAAAAUAAAAG
AAAACQAAAAEAAAA4AAAAAgAAABAAAAABAAAAAgAAAAMAAAAEAAAAAQAAAAUAAAABAAAAAQAAAAAA
RAQBAAAAAAAGANQC9AUGAGMD9AUGACAC4QUPAGgGAAAGAE0C6AQGALcC6AQGAJgC6AQGAEoD6AQG
APQC6AQGAA0D6AQGAGQC6AQGAH8CmwMKACgD8wMKAHwB8wMOAMADxAYSABwFRwAGALoF4wYGANUA
dQQGADcFdQQGAIEEdQQGAAMC4QUGAEsHdQQGAIwFFAYGAFQF0wQOANMBLgQOADQCLgQOALMBvgQG
AOgB9AUKABwE8wMWALEGHwEWAMwAHwEGALcDdQQGAMYDCgAGAG8FCgAGAGAFCgAOAIoHxAYOAPYG
xAYOAH0FxAYOAPoExAYOAHQBxAYSAB8FQQUSAIYARwAGAJEAdQQSAMIAOwASAAoFOwASAJgBOwAS
AIIHOwAGAIMFdQQGACwFdQQKAJwF8wMGAD8BdQQGAOEAdQQGAJQH6AQAAAAAAQAAAAAAAQABAAEA
EACXBGIAOQABAAEAAAAQABsGdwZZAAEAAwAAARAAuwZ3Bm0AAwAHAAMBAAAiBwAAUQAEAAoAEQCG
BO4AEQBkAfIAEQCeAPYABgYzAPoAVoASB/0AVoBEAf0AUCAAAAAAhgCdBAYAAQCYIgAAAACGGNQF
BgABAKAiAAAAAIMY1AUGAAEAqCIAAAAAkwiIBQEBAQDUIgAAAACTCEwBBgEBANsiAAAAAJMIWAEL
AQEA4yIAAAAAlghSBxEBAgDqIgAAAACGGNQFBgACAPIiAAAAAJEY2gUWAQIAAAABAJUDCQDUBQEA
EQDUBQYAGQDUBQoAKQDUBRAAMQDUBRAAOQDUBRAAQQDUBRAASQDUBRAAUQDUBRAAWQDUBRAAYQDU
BRAAaQDUBQYAqQDUBQYA0QDUBRUA4QDUBQYAcQAaBy4A6QCtBjMA8QBsBDgA+QCBAz4ACQEOAUIA
EQHUBRAAGQEFAUcA+QCLA0sACQGiBEIAIQHAA1AAMQEOB1oAeQADB14AOQFsBGQAQQGBA0cAAQFE
B2sAAQFEB3EAgQDUBRAASQGSBAYAUQGmBngAgQCuAH0AYQE7B4gAcQHGBY4AiQBtBz4AeQFsBJMA
sQC1A0cAAQF8BJgAAQHLA54AAQGWAJgAIQG+A6MAiQB5B1oAkQDLAQYAiQHUBRAA6QBeBwEA6QAw
B6wAkQGwBbIAcQDUBQYAsQDUBQYAmQHzALsAmQGQB8QAuQDUBcoA2QDUBQYACAAUAOQACAAYAOkA
KQBzAFEBLgALACkBLgATADIBLgAbAFEBLgAjAFoBLgArAIMBLgAzAIMBLgA7AIMBLgBDAFoBLgBL
AIkBLgBTAIMBLgBbAKABQwBjAOkASQBzAFEBYQB7AOkAYwBrAOkAGwADAAEABAADAAAAjAUaAQAA
bAEfAQAAVgckAQIABAADAAIABQAFAAEABgAFAAIABwAHAASAAAABAAAATST7nwAAAAAAAGIAAAAE
AAAAAAAAAAAAAADSAFkAAAAAABAAAAAAAAAAAAAAANsA1AMAAAAABAAAAAAAAAAAAAAA0gB1BAAA
AAAEAAAAAAAAAAAAAADSADsAAAAAABAAAAAAAAAAAAAAANsAFAAAAAAAAAAAAAEAAAAlBgAABQAC
AAAAAAAAPE1vZHVsZT4AU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2
YWx1ZV9fAFN5c3RlbS5EYXRhAFN5c3RlbS5EYXRhLk9sZURiAG1zY29ybGliAFNUXzM3YmFhMzM0
OTQxYzRmZDJhZDg1MTNiNTUxZWU3ZjVjAE9sZURiU2NoZW1hR3VpZABUcmltRW5kAGRlZmF1bHRJ
bnN0YW5jZQBHZXRPbGVEYlNjaGVtYVRhYmxlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJs
ZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBnZXRfTmFtZQBHZXREaXJlY3Rv
cnlOYW1lAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVHlwZQBGYWlsdXJlAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAHJlc291cmNlQ3VsdHVyZQBDYXB0dXJlAFZTVEFSVFNjcmlwdE9i
amVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBEaXNwb3NlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0
cmlidXRlAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBF
ZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRy
YWRlbWFya0F0dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1
cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25S
ZWxheGF0aW9uc0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5
cmlnaHRBdHRyaWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5
Q29tcGFueUF0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUA
c2V0X1ZhbHVlAHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVG9TdHJpbmcASXNNYXRj
aABQYXRoAEVuZHNXaXRoAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5D
b21wb25lbnRNb2RlbABTVF8zN2JhYTMzNDk0MWM0ZmQyYWQ4NTEzYjU1MWVlN2Y1Yy5kbGwAZ2V0
X0l0ZW0AU3lzdGVtAFRyaW0ARW51bQByZXNvdXJjZU1hbgBPcGVuAFNjcmlwdE1haW4AR2V0Rmls
ZU5hbWVXaXRob3V0RXh0ZW5zaW9uAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxp
emF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAEdyb3VwQ29sbGVjdGlvbgBEYXRhUm93Q29sbGVjdGlv
bgBPbGVEYkNvbm5lY3Rpb24AQXBwbGljYXRpb25FeGNlcHRpb24AU3lzdGVtLkRhdGEuQ29tbW9u
AEN1bHR1cmVJbmZvAEZpbGVTeXN0ZW1JbmZvAERpcmVjdG9yeUluZm8AR3JvdXAAQ2hhcgBnZXRf
UmVzb3VyY2VNYW5hZ2VyAEV2ZW50c09iamVjdFdyYXBwZXIARmlyZUVycm9yAElFbnVtZXJhdG9y
AEdldEVudW1lcmF0b3IALmN0b3IALmNjdG9yAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVu
dGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfMzdiYWEzMzQ5NDFjNGZk
MmFkODUxM2I1NTFlZTdmNWMuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2lu
Z01vZGVzAFNUXzM3YmFhMzM0OTQxYzRmZDJhZDg1MTNiNTUxZWU3ZjVjLlByb3BlcnRpZXMAVGFi
bGVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAU3lzdGVtLlRleHQuUmVndWxhckV4cHJlc3Npb25z
AFN5c3RlbS5Db2xsZWN0aW9ucwBSZWdleE9wdGlvbnMAZ2V0X0dyb3VwcwBnZXRfU3VjY2VzcwBn
ZXRfRHRzAFNjcmlwdFJlc3VsdHMAZ2V0X0V2ZW50cwBnZXRfUm93cwBDb25jYXQAT2JqZWN0AGdl
dF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AGdldF9DdXJyZW50AE1vdmVOZXh0AERhdGFSb3cAUmVn
ZXgAZ2V0X0Fzc2VtYmx5AAAAAAAnVQBzAGUAcgA6ADoARQB4AGMAZQBsAEYAaQBsAGUAUABhAHQA
aAAAJVUAcwBlAHIAOgA6AEUAbQBwAGwAbwB5AGUAZQBOAGEAbQBlAABrXABiACgASgBhAG4AfABG
AGUAYgB8AE0AYQByAHwAQQBwAHIAfABNAGEAeQB8AEoAdQBuAHwASgB1AGwAfABBAHUAZwB8AFMA
ZQBwAHwATwBjAHQAfABOAG8AdgB8AEQAZQBjACkAXABiAAADJAAAXVAAcgBvAHYAaQBkAGUAcgA9
AE0AaQBjAHIAbwBzAG8AZgB0AC4AQQBDAEUALgBPAEwARQBEAEIALgAxADIALgAwADsARABhAHQA
YQAgAFMAbwB1AHIAYwBlAD0AAGM7AEUAeAB0AGUAbgBkAGUAZAAgAFAAcgBvAHAAZQByAHQAaQBl
AHMAPQAiAEUAeABjAGUAbAAgADEAMgAuADAAOwBIAEQAUgA9AFkARQBTADsASQBNAEUAWAA9ADEA
IgA7AAAVVABBAEIATABFAF8ATgBBAE0ARQAAZ14AKABKAGEAbgB8AEYAZQBiAHwATQBhAHIAfABB
AHAAcgB8AE0AYQB5AHwASgB1AG4AfABKAHUAbAB8AEEAdQBnAHwAUwBlAHAAfABPAGMAdAB8AE4A
bwB2AHwARABlAGMAKQAkAACAiU4AbwAgAHcAbwByAGsAcwBoAGUAZQB0ACAAZQBuAGQAaQBuAGcA
IABpAG4AIAAkACAAYQBuAGQAIABuAGEAbQBlAGQAIABsAGkAawBlACAAYQAgAG0AbwBuAHQAaAAg
ACgASgBhAG4ALQBEAGUAYwApACAAdwBhAHMAIABmAG8AdQBuAGQALgABH1UAcwBlAHIAOgA6AFMA
aABlAGUAdABOAGEAbQBlAAAfUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAFsAADNBADkAOgBK
ADEAMAAwAF0AIABXAEgARQBSAEUAIABGADEAIAA8AD4AIABOAFUATABMAAAdVQBzAGUAcgA6ADoA
RQB4AGMAZQBsAFMAUQBMAAAtUwBjAHIAaQBwAHQAIABUAGEAcwBrACAAEyAgAFMAZQB0ACAAVgBh
AHIAcwABAQBxUwBUAF8AMwA3AGIAYQBhADMAMwA0ADkANAAxAGMANABmAGQAMgBhAGQAOAA1ADEA
MwBiADUANQAxAGUAZQA3AGYANQBjAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAAAJ990uRIGblLgyjQGE9S0lYABCABAQgDIAABBSABARERBCABAQ4FIAEBEWUSBwsO
DhI9Dg4SQRJFDg4SSRJNBCAAEnUEIAASeQUgARJ9HAMgABwEAAEODgMgAA4EIAEBHAkAAxI9Dg4R
gJUDIAACBSAAEoCdBiABEoCZCAUAAg4ODgYAAw4ODg4EBhGArQogAhKAsRGArR0cBSAAEoC1BCAA
EkUEIAEcDgUgAQ4dAwQgAQIOCAADAg4OEYCVBSAAEoDJCCAFAggODg4ICAABEoDNEYDRBSAAEoDV
ByACAQ4SgNUIt3pcVhk04IkIiYRdzYCAzJEEAAAAAAQBAAAAAwYSXQMGEmEDBhIQAgYIAwYRFAQA
ABJdBAAAEmEFAAEBEmEEAAASEAMAAAEECAASXQQIABJhBAgAEhAIAQAIAAAAAAAeAQABAFQCFldy
YXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUXzM3YmFhMzM0OTQxYzRmZDJhZDg1
MTNiNTUxZWU3ZjVjAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjUAAEkBABouTkVURnJhbWV3
b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsg
NC43AAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAuDYAAAAAAAAAAAAA0jYAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AMQ2AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAEAEAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgA
AABYQAAAGgQAAAAAAAAAAAAAGgQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAA
AL0E7/4AAAEAAAABAPufTSQAAAEA+59NJD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAA
AQBWAGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAA
AAAAAACwBHoDAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAFYDAAABADAAMAAwADAA
MAA0AGIAMAAAABoAAQABAEMAbwBtAG0AZQBuAHQAcwAAAAAAAAAiAAEAAQBDAG8AbQBwAGEAbgB5
AE4AYQBtAGUAAAAAAAAAAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABpAG8AbgAAAAAA
UwBUAF8AMwA3AGIAYQBhADMAMwA0ADkANAAxAGMANABmAGQAMgBhAGQAOAA1ADEAMwBiADUANQAx
AGUAZQA3AGYANQBjAAAAPgAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4AMAAuADkA
MgA5ADMALgA0ADAAOQA1ADUAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBlAAAAUwBU
AF8AMwA3AGIAYQBhADMAMwA0ADkANAAxAGMANABmAGQAMgBhAGQAOAA1ADEAMwBiADUANQAxAGUA
ZQA3AGYANQBjAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBoAHQAAABD
AG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAyADUAAAAqAAEAAQBMAGUAZwBhAGwAVAByAGEA
ZABlAG0AYQByAGsAcwAAAAAAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABGAGkAbABlAG4AYQBt
AGUAAABTAFQAXwAzADcAYgBhAGEAMwAzADQAOQA0ADEAYwA0AGYAZAAyAGEAZAA4ADUAMQAzAGIA
NQA1ADEAZQBlADcAZgA1AGMALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAA
AAAAUwBUAF8AMwA3AGIAYQBhADMAMwA0ADkANAAxAGMANABmAGQAMgBhAGQAOAA1ADEAMwBiADUA
NQAxAGUAZQA3AGYANQBjAAAAQgAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA5ADIAOQAzAC4ANAAwADkANQA1AAAAAABGAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA5ADIAOQAzAC4ANAAwADkANQA1AAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAOQ2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get Contact Information + Submission Daate"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{2A72A241-A01B-4377-9B8C-30C99283FC4B}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Contact Information + Submission Daate"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_25f6b95236824f21a60575c134592f5b"
              VSTAMajorVersion="16"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadOnlyVariables="User::ExcelFilePath"
              ReadWriteVariables="User::ContactInformation,User::SubmissionDate">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_25f6b95236824f21a60575c134592f5b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{162C13E3-BD6F-4732-AB72-57E62CE59E19}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_25f6b95236824f21a60575c134592f5b</RootNamespace>
    <AssemblyName>ST_25f6b95236824f21a60575c134592f5b</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.Office.Interop.Excel, Version=15.0.0.0, Culture=neutral, PublicKeyToken=71e9bce111e9429c, processorArchitecture=MSIL">
      <HintPath>C:\Users\yuvee\AppData\Local\Temp\Vsta\SSIS_ST160\VstaPY8r7HSJ40uxPVuxS1zmjQ\packages\Microsoft.Office.Interop.Excel.15.0.4795.1001\lib\net20\Microsoft.Office.Interop.Excel.dll</HintPath>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </Reference>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=16.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="packages.config" />
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST160</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using Microsoft.SqlServer.Dts.Runtime;
using System;
using System.Data;
using System.Data.OleDb;
using System.Windows.Forms;
#endregion

namespace ST_25f6b95236824f21a60575c134592f5b
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            string excelFilePath = Dts.Variables["User::ExcelFilePath"].Value.ToString();
            string connectionString = $"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={excelFilePath};Extended Properties=\"Excel 12.0 Xml;HDR=NO\"";

            string extractedAddress = "";
            DateTime submissionDate = DateTime.MinValue;
            bool submissionDateFound = false;

            try
            {
                using (OleDbConnection conn = new OleDbConnection(connectionString))
                {
                    conn.Open();
                    string sheetName = "Leave$"; // hardcoded sheet name
                    string query = $"SELECT * FROM [{sheetName}]";
                    OleDbCommand cmd = new OleDbCommand(query, conn);
                    OleDbDataReader reader = cmd.ExecuteReader();

                    bool nextRowIsAddress = false;

                    while (reader.Read())
                    {
                        string f1 = reader[0]?.ToString().Trim() ?? "";
                        string f2 = reader[1]?.ToString().Trim() ?? "";

                        if (nextRowIsAddress)
                        {
                            extractedAddress = f1;
                            nextRowIsAddress = false;
                        }

                        if (f1 == "Address and Telephone Number during Annual Leave")
                        {
                            nextRowIsAddress = true;
                        }

                        if (f1 == "Date" && DateTime.TryParse(f2, out DateTime parsedDate))
                        {
                            submissionDate = parsedDate;
                            submissionDateFound = true;
                        }
                    }

                    reader.Close();
                }

                // Ensure valid assignments (avoid DBNull)
                Dts.Variables["User::ContactInformation"].Value = extractedAddress ?? "";
                Dts.Variables["User::SubmissionDate"].Value = submissionDateFound ? submissionDate : (object)DateTime.MinValue;

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                Dts.Events.FireError(0, "Script Task", ex.Message, "", 0);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_25f6b95236824f21a60575c134592f5b</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_25f6b95236824f21a60575c134592f5b</msb:DisplayName>
    <msb:ProjectId>{3C7F3DEA-07C5-47CC-9A70-03A8798AF5FE}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_25f6b95236824f21a60575c134592f5b.csproj" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="packages.config" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="packages.config"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<packages>
  <package id="Microsoft.Office.Interop.Excel" version="15.0.4795.1001" targetFramework="net472" />
</packages>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_25f6b95236824f21a60575c134592f5b.Properties.Settings.get_Default():ST_25f6b95236824f21a60575c134592f5b.Properties.Sett" +
    "ings")]

namespace ST_25f6b95236824f21a60575c134592f5b.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_25f6b95236824f21a60575c134592f5b")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_25f6b95236824f21a60575c134592f5b")]
[assembly: AssemblyCopyright("Copyright @  2025")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_25f6b95236824f21a60575c134592f5b.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_25f6b95236824f21a60575c134592f5b.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_25f6b95236824f21a60575c134592f5b.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_25f6b95236824f21a60575c134592f5b.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_25f6b95236824f21a60575c134592f5b.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_25f6b95236824f21a60575c134592f5b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAG1dR2gAAAAAAAAAAOAAIiALATAAABQAAAAIAAAAAAAANjMA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAOQyAABPAAAAAEAAAGwEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAPBMAAAAgAAAAFAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAGwEAAAAQAAAAAYAAAAWAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAY
MwAAAAAAAEgAAAACAAUAsCIAAHwPAAABAAAAAAAAACwyAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBgC3AQAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKcikAAHAGcocAAHAoFQAACgty4QAAcAx+FgAACg0WEwQHcxcAAAoTBREFbxgAAApy
4wAAcBMGcvEAAHARBnIRAQBwKBUAAAoRBXMZAAAKbxoAAAoTBxYTCDiCAAAAEQcWbxsAAAolLQQm
FCsKbxQAAApvHAAACiUtBiZy4QAAcBMJEQcXbxsAAAolLQQmFCsKbxQAAApvHAAACiUtBiZy4QAA
cBMKEQgsBhEJDBYTCBEJchUBAHAoHQAACiwDFxMIEQlydwEAcCgdAAAKLBERChILKB4AAAosBhEL
DRcTBBEHbx8AAAo6cv///xEHbyAAAAreDBEFLAcRBW8hAAAK3AIoEAAACm8RAAAKcoEBAHBvEgAA
CgglLQYmcuEAAHBvIgAACgIoEAAACm8RAAAKcrMBAHBvEgAAChEELQx+FgAACowPAAABKwYJjA8A
AAFvIgAACgIoEAAAChZvIwAACt40EwwCKBAAAApvJAAAChZy3QEAcBEMbyUAAApy4QAAcBZvJgAA
CiYCKBAAAAoXbyMAAAreACoAQTQAAAIAAABIAAAAzAAAABQBAAAMAAAAAAAAAAAAAABAAAAAQgEA
AIIBAAA0AAAAEgAAAR4CKCcAAAoqHgIoKAAACiqufgEAAAQtHnL1AQBw0AMAAAIoKQAACm8qAAAK
cysAAAqAAQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAigsAAAKKi5zCAAABoADAAAE
KgAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAdAQAACN+AADgBAAAaAYAACNT
dHJpbmdzAAAAAEgLAABoAgAAI1VTALANAAAQAAAAI0dVSUQAAADADQAAvAEAACNCbG9iAAAAAAAA
AAIAAAFXHaIBCQMAAAD6ATMAFgAAAQAAACcAAAAFAAAABgAAAAkAAAABAAAALAAAAAIAAAAQAAAA
AQAAAAIAAAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAAPADAQAAAAAABgCNAjMFBgAcAzMFBgDZ
ASAFDwCnBQAABgAGAngEBgBwAngEBgBRAngEBgADA3gEBgCtAngEBgDGAngEBgAdAngEBgA4Al0D
CgDhAp8DCgBBAZ8DBgDjACEEDgCKBGEADgDDBGEABgCaBCEEBgAtBCEEBgC8ASAFBgAsBiEEBgDl
BFMFBgC3BGMEEgCMAdoDEgDtAdoDEgBdAU4EBgChATMFCgDIA58DFgDpBewAFgCqAOwABgB5AyEE
DgCNBKQEDgCBAGEADgDGBKQEBgCzACEECgD1BJ8DBgAMASEEBgC/ACEEBgBSBngEAAAAAAEAAAAA
AAEAAQABABAAQwQ9ADkAAQABAAAAEABaBbYFVQABAAMAAAEQAPMFtgVpAAMABwADAQAADAYAAE0A
BAAKABEAMgS9ABEAMQHBABEAjgDFAAYGKQDJAFaA/AXMAFaAEQHMAFAgAAAAAIYASQQGAAEASCIA
AAAAhhgTBQYAAQBQIgAAAACDGBMFBgABAFgiAAAAAJMI4QTQAAEAhCIAAAAAkwgZAdUAAQCLIgAA
AACTCCUB2gABAJMiAAAAAJYIMwbgAAIAmiIAAAAAhhgTBQYAAgCiIgAAAACRGBkF5QACAAAAAQBX
AwkAEwUBABEAEwUGABkAEwUKACkAEwUQADEAEwUQADkAEwUQAEEAEwUQAEkAEwUQAFEAEwUQAFkA
EwUQAGEAEwUQAGkAEwUGAKEAEwUGAMkAEwUVANkAEwUGAHEABAYwAOEA5QU1AOkAGAQ6APEAOgNA
AKkAdwNEAPkAJQZIAHkATgNPAIEAEwUQAAEBPgQGAAkBEwVTAAkB0wRaABEBGARfAPkAKAREAPkA
WwZkAHkAgwFqABEBfAByABEBdQEGABkBewEGAPEARAN2AOEAPwYBAOEAGgZ7AJEAngBEACEBCQWB
AHEAEwUGAKkAEwUGACkB0QCKACkBTgaTALEAEwWZANEAEwUGAAgAFACzAAgAGAC4ACkAcwAgAS4A
CwD4AC4AEwABAS4AGwAgAS4AIwApAS4AKwBSAS4AMwBSAS4AOwBSAS4AQwApAS4ASwBYAS4AUwBS
AS4AWwBvAUMAYwC4AEkAcwAgAWEAewC4AGMAawC4ABsAAwABAAQAAwAAAOUE6QAAADkB7gAAADcG
8wACAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAAAEwkBgIAAAAAAAA9AAAABAAAAAAAAAAA
AAAAoQBzAAAAAAAQAAAAAAAAAAAAAACqAIADAAAAAAQAAAAAAAAAAAAAAKEAMQAAAAAABAAAAAAA
AAAAAAAAoQAhBAAAAAAQAAAAAAAAAAAAAACqAAoAAAAAAAAAAAABAAAAZAUAAAUAAgAAAAAAADxN
b2R1bGU+AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRh
AFNUXzI1ZjZiOTUyMzY4MjRmMjFhNjA1NzVjMTM0NTkyZjViAFN5c3RlbS5EYXRhLk9sZURiAG1z
Y29ybGliAFJlYWQAT2xlRGJDb21tYW5kAGRlZmF1bHRJbnN0YW5jZQBnZXRfTWVzc2FnZQBWYXJp
YWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBEYXRl
VGltZQBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5SdW50aW1lAFR5cGUARmFpbHVyZQBnZXRfQ3Vs
dHVyZQBzZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxC
YXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAENsb3NlAERpc3Bvc2UAVHJ5UGFyc2UARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQBzZXRfVmFsdWUATWluVmFsdWUAdmFs
dWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUb1N0cmluZwBNaWNyb3NvZnQuU3FsU2VydmVy
LlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBTY3Jp
cHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfMjVmNmI5NTIzNjgyNGYyMWE2
MDU3NWMxMzQ1OTJmNWIuZGxsAGdldF9JdGVtAFN5c3RlbQBUcmltAEVudW0AcmVzb3VyY2VNYW4A
T3BlbgBTY3JpcHRNYWluAFN5c3RlbS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9u
AFN5c3RlbS5SZWZsZWN0aW9uAE9sZURiQ29ubmVjdGlvbgBFeGNlcHRpb24AU3lzdGVtLkRhdGEu
Q29tbW9uAEN1bHR1cmVJbmZvAE9sZURiRGF0YVJlYWRlcgBFeGVjdXRlUmVhZGVyAGdldF9SZXNv
dXJjZU1hbmFnZXIARXZlbnRzT2JqZWN0V3JhcHBlcgBGaXJlRXJyb3IALmN0b3IALmNjdG9yAFN5
c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5S
ZXNvdXJjZXMAU1RfMjVmNmI5NTIzNjgyNGYyMWE2MDU3NWMxMzQ1OTJmNWIuUHJvcGVydGllcy5S
ZXNvdXJjZXMucmVzb3VyY2VzAERlYnVnZ2luZ01vZGVzAFNUXzI1ZjZiOTUyMzY4MjRmMjFhNjA1
NzVjMTM0NTkyZjViLlByb3BlcnRpZXMAZ2V0X1ZhcmlhYmxlcwBTZXR0aW5ncwBTdWNjZXNzAGdl
dF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfRXZlbnRzAENvbmNhdABPYmplY3QAZ2V0X0RlZmF1bHQA
c2V0X1Rhc2tSZXN1bHQAZ2V0X0Fzc2VtYmx5AG9wX0VxdWFsaXR5AAAAJ1UAcwBlAHIAOgA6AEUA
eABjAGUAbABGAGkAbABlAFAAYQB0AGgAAF1QAHIAbwB2AGkAZABlAHIAPQBNAGkAYwByAG8AcwBv
AGYAdAAuAEEAQwBFAC4ATwBMAEUARABCAC4AMQAyAC4AMAA7AEQAYQB0AGEAIABTAG8AdQByAGMA
ZQA9AABZOwBFAHgAdABlAG4AZABlAGQAIABQAHIAbwBwAGUAcgB0AGkAZQBzAD0AIgBFAHgAYwBl
AGwAIAAxADIALgAwACAAWABtAGwAOwBIAEQAUgA9AE4ATwAiAAABAA1MAGUAYQB2AGUAJAAAH1MA
RQBMAEUAQwBUACAAKgAgAEYAUgBPAE0AIABbAAADXQAAYUEAZABkAHIAZQBzAHMAIABhAG4AZAAg
AFQAZQBsAGUAcABoAG8AbgBlACAATgB1AG0AYgBlAHIAIABkAHUAcgBpAG4AZwAgAEEAbgBuAHUA
YQBsACAATABlAGEAdgBlAAAJRABhAHQAZQAAMVUAcwBlAHIAOgA6AEMAbwBuAHQAYQBjAHQASQBu
AGYAbwByAG0AYQB0AGkAbwBuAAApVQBzAGUAcgA6ADoAUwB1AGIAbQBpAHMAcwBpAG8AbgBEAGEA
dABlAAAXUwBjAHIAaQBwAHQAIABUAGEAcwBrAABxUwBUAF8AMgA1AGYANgBiADkANQAyADMANgA4
ADIANABmADIAMQBhADYAMAA1ADcANQBjADEAMwA0ADUAOQAyAGYANQBiAC4AUAByAG8AcABlAHIA
dABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAiIbbLAQHTkSFIj0pjJeWsQAEIAEBCAMgAAEF
IAEBEREEIAEBDgUgAQERYRQHDQ4ODhE9AhJBDhJFAg4OET0SSQQgABJxBCAAEnUFIAESeRwDIAAc
AyAADgYAAw4ODg4DBhE9BiACAQ4SQQQgABJFBCABHAgFAAICDg4HAAICDhARPQMgAAIEIAEBHAUg
ABKAkQggBQIIDg4OCAgAARKAlRGAmQUgABKAnQcgAgEOEoCdCLd6XFYZNOCJCImEXc2AgMyRBAAA
AAAEAQAAAAMGElkDBhJdAwYSEAIGCAMGERQEAAASWQQAABJdBQABARJdBAAAEhADAAABBAgAElkE
CAASXQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQgBAAIAAAAA
ACgBACNTVF8yNWY2Yjk1MjM2ODI0ZjIxYTYwNTc1YzEzNDU5MmY1YgAABQEAAAAAFgEAEUNvcHly
aWdodCBAICAyMDI1AABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0LjcBAFQOFEZyYW1ld29y
a0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAALQAAADOyu++AQAAAJEAAABsU3lzdGVt
LlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3Vs
dHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNv
dXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAAAMMwAAAAAAAAAA
AAAmMwAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGDMAAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBt
c2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAA
SAAAAFhAAAAOBAAAAAAAAAAAAAAOBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAA
AAAAvQTv/gAAAQAAAAEABgJMJAAAAQAGAkwkPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQA
AAABAFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBu
AAAAAAAAALAEbgMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAASgMAAAEAMAAwADAA
MAAwADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBu
AHkATgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAA
AABTAFQAXwAyADUAZgA2AGIAOQA1ADIAMwA2ADgAMgA0AGYAMgAxAGEANgAwADUANwA1AGMAMQAz
ADQANQA5ADIAZgA1AGIAAAA6AA0AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4A
OQAyADkAMgAuADUAMQA4AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADIANQBmADYAYgA5ADUAMgAzADYAOAAyADQAZgAyADEAYQA2ADAANQA3ADUAYwAxADMANAA1ADkA
MgBmADUAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgA1AAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AMgA1AGYANgBiADkANQAyADMANgA4ADIANABmADIAMQBhADYAMAA1ADcANQBjADEA
MwA0ADUAOQAyAGYANQBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADIANQBmADYAYgA5ADUAMgAzADYAOAAyADQAZgAyADEAYQA2ADAANQA3ADUAYwAxADMA
NAA1ADkAMgBmADUAYgAAAD4ADQABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOQAyADkAMgAuADUAMQA4AAAAAABCAA0AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkA
bwBuAAAAMQAuADAALgA5ADIAOQAyAC4ANQAxADgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAODMAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Get Employee ID"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{7478A00E-7035-42E2-803D-9A2553823566}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Get Employee ID"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="SELECT EmployeeID FROM Employee WHERE FullName = ?&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="0"
                SQLTask:DtsVariableName="User::EmployeeID" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Client into Audit table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F0AD6C43-77BC-4BFD-8302-5B1A2D76253B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Client into Audit table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog &#xA;(PackageName, TaskName, OperationType, EntityType, [RowCount], FileProcessed, EmployeeID, EmployeeName)&#xA;VALUES (?, 'InsertClients', 'Insert', 'Client', ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::RowInsertClient"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Employee If Needed"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:DelayValidation="True"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{67F56AF0-713F-469F-A0E2-9563507A922D}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Employee If Needed"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="IF NOT EXISTS (SELECT 1 FROM Employee WHERE FullName = ?)&#xA;BEGIN&#xA;    INSERT INTO Employee (FullName, CreatedAt)&#xA;    VALUES (?, GETDATE())&#xA;END&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Expense into Audit table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{d5866ec1-6ce6-4912-bfef-10ecf6268cbe}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Expense into Audit table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog &#xA;(PackageName, TaskName, OperationType, EntityType, [RowCount], FileProcessed, EmployeeID, EmployeeName)&#xA;VALUES (?, 'InsertExpense', 'Insert', 'Expense', ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::RowInsertExpenses"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Expenses Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{ADF1B96C-A13C-4547-A711-0F541DB2866B}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Expenses Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Inputs[Data Conversion Input].Columns[Month]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Month"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[Month]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Inputs[Data Conversion Input].Columns[ExpenseDescription]"
                          cachedDataType="wstr"
                          cachedLength="50"
                          cachedName="ExpenseDescription"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[ExpenseDescription]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Inputs[Data Conversion Input].Columns[Type]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Type"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Inputs[Data Conversion Input].Columns[ZarCost]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ZarCost"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[ZarCost]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Month]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Month]"
                          name="Copy of Month"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[Month]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ExpenseDescription]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ExpenseDescription]"
                          name="Copy of ExpenseDescription"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[ExpenseDescription]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type]"
                          name="Copy of Type"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[Type]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ZarCost]"
                          dataType="decimal"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ZarCost]"
                          name="Copy of ZarCost"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[ZarCost]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Output].Columns[EmployeeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Output].Columns[EmployeeID]"
                          name="EmployeeID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Leave$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT F1, F2, F4, F6 
FROM [Expense Claim$A7:F1000] 
WHERE F1 &lt;&gt; NULL
AND     F2 &lt;&gt; NULL</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[Month]"
                          name="Month"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[ExpenseDescription]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          length="50"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[ExpenseDescription]"
                          name="ExpenseDescription"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[Type]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[Type]"
                          name="Type"
                          truncationRowDisposition="RedirectRow" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[ZarCost]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].Columns[ZarCost]"
                          name="ZarCost"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="date"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          name="F4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[F6]"
                          name="F6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Expense]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Output].Columns[EmployeeID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Month]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Month"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Month]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of Type]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of Type"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Type]"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of Type]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of ZarCost]"
                          cachedDataType="decimal"
                          cachedName="Copy of ZarCost"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ZarCost]"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ZarCost]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Copy of ExpenseDescription]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Copy of ExpenseDescription"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExpenseDescription]"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output].Columns[Copy of ExpenseDescription]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExpenseID]"
                          dataType="i4"
                          name="ExpenseID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Month]"
                          dataType="dbDate"
                          name="Month" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ExpenseDescription]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ExpenseDescription" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Type]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Type" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ZarCost]"
                          dataType="numeric"
                          name="ZarCost"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="dbDate"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Expenses Data\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowInsertExpenses</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Expenses Data\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Insert Expenses Data\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert Expenses Data.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Insert Expenses Data\Row Count.Inputs[Row Count Input 1]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Expenses Data.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Expenses Data.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Insert Expenses Data\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Expenses Data\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Expenses Data.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Insert Expenses Data\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Leave Data"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{2E20AF23-1CC9-45FA-8D7F-3A65B77A5542}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Leave Data"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[F2]"
                          cachedDataType="date"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[F3]"
                          cachedDataType="date"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[F4]"
                          cachedDataType="r8"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F6]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[TypeOfLeave]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[TypeOfLeave]"
                          name="TypeOfLeave"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[StartDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[StartDate]"
                          name="StartDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F2]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[EndDate]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[EndDate]"
                          name="EndDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F3]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[NumberOfDays]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[NumberOfDays]"
                          name="NumberOfDays"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F4]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[ApprovalObtained]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[ApprovalObtained]"
                          name="ApprovalObtained"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F5]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[SickNoteProvided]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[SickNoteProvided]"
                          name="SickNoteProvided"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F6]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 3"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[ContactInfo]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="1000"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[ContactInfo]"
                          name="ContactInfo"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_STR,1000,1252)@[User::ContactInformation]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_STR,1000,1252)@[User::ContactInformation]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[SubmissionDate]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[SubmissionDate]"
                          name="SubmissionDate"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">(DT_DBTIMESTAMP)@[User::SubmissionDate]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">(DT_DBTIMESTAMP)@[User::SubmissionDate]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[EmployeeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[EmployeeID]"
                          name="EmployeeID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Leave Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Leave$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * 
FROM [Leave$A11:F1000]
WHERE F1 IS NOT NULL
AND F1 &lt;&gt; "Address and Telephone Number during Annual Leave"
AND F1 &lt;&gt; "Employee Signature"
AND F1 &lt;&gt; "Client Signature"
AND F1 &lt;&gt; "Date"
AND F2 IS NOT NULL</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">2</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F2]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F2]"
                          name="F2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F3]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F3]"
                          name="F3"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F4]"
                          dataType="r8"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F4]"
                          name="F4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F5]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F5]"
                          name="F5"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F6]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].Columns[F6]"
                          name="F6"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="date"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="date"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="r8"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F2]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F3]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F3]"
                          name="F3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F4]"
                          dataType="r8"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F4]"
                          name="F4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F5]"
                          name="F5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[F6]"
                          name="F6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Leave]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SubmissionDate]"
                          cachedDataType="dbTimeStamp"
                          cachedName="SubmissionDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SubmissionDate]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[SubmissionDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[EmployeeID]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[TypeOfLeave]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="TypeOfLeave"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[TypeOfLeave]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[StartDate]"
                          cachedDataType="date"
                          cachedName="StartDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[StartDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EndDate]"
                          cachedDataType="date"
                          cachedName="EndDate"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[EndDate]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[NumberOfDays]"
                          cachedDataType="r8"
                          cachedName="NumberOfDays"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[NumberOfDays]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ApprovalObtained]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ApprovalObtained"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[ApprovalObtained]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[SickNoteProvided]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="SickNoteProvided"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNoteProvided]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output].Columns[SickNoteProvided]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ContactInfo]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="1000"
                          cachedName="ContactInfo"
                          externalMetadataColumnId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ContactInformation]"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output].Columns[ContactInfo]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[LeaveID]"
                          dataType="i4"
                          name="LeaveID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TypeOfLeave]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="TypeOfLeave" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartDate]"
                          dataType="dbDate"
                          name="StartDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndDate]"
                          dataType="dbDate"
                          name="EndDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[NumberOfDays]"
                          dataType="numeric"
                          name="NumberOfDays"
                          precision="4"
                          scale="1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ApprovalObtained]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ApprovalObtained" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SickNoteProvided]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="SickNoteProvided" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ContactInformation]"
                          codePage="1252"
                          dataType="str"
                          length="1000"
                          name="ContactInformation" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[SubmissionDate]"
                          dataType="dbDate"
                          name="SubmissionDate" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="dbDate"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\Insert Leave Data\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowInsertLeave</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\Insert Leave Data\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\Insert Leave Data\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\Insert Leave Data\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Row Count.Inputs[Row Count Input 1]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Leave Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\Insert Leave Data.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\Insert Leave Data\Row Count.Outputs[Row Count Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Leave into Audit Table Fixed"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{6bd58b52-2a0f-49ac-8134-0931a9a017d4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Leave into Audit Table Fixed"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog &#xA;(PackageName, TaskName, OperationType, EntityType, [RowCount], FileProcessed, EmployeeID, EmployeeName)&#xA;VALUES (?, 'InsertLeave', 'Insert', 'Leave', ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::RowInsertLeave"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Timesheet into Audit table FIXED"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{42bb5bf6-2717-4dcd-a12b-e5d51fb41a0a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Timesheet into Audit table FIXED"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog &#xA;(PackageName, TaskName, OperationType, EntityType, [RowCount], FileProcessed, EmployeeID, EmployeeName)&#xA;VALUES (?, 'InsertTimesheet', 'Insert', 'Timesheet', ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::RowInsertTimesheet"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Timesheet into Audit table FIXED 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{29a819eb-1f42-48d5-9249-9026685d7247}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Timesheet into Audit table FIXED 1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog &#xA;(PackageName, TaskName, OperationType, EntityType, [RowCount], FileProcessed, EmployeeID, EmployeeName)&#xA;VALUES (?, 'InsertDescription', 'Insert', 'Description', ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::RowInsertDescriptions"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Insert Updated Values to Audit Log for Timesheet FIXED"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{ead5652f-2ab7-4fbf-8bb8-e68a661e8e5c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Insert Updated Values to Audit Log for Timesheet FIXED"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog &#xA;(PackageName, TaskName, OperationType, EntityType, [RowCount], FileProcessed, EmployeeID, EmployeeName)&#xA;VALUES (?, 'UpdateTimesheet', 'Update', 'Timesheet', ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::TimesheetRowsUpdated"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\InsertClients"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{52A492A1-3B1D-40ED-A153-B244D5B36922}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="InsertClients"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\InsertClients\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertClients\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Conditional Split.Inputs[Conditional Split Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Conditional Split.Outputs[ValidatedClients]"
                      description="Output 2 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ValidatedClients"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[TRIM](#{Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].Columns[F1]}) != "" &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].Columns[F1]})</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(F1) != "" &amp;&amp; !ISNULL(F1)</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertClients\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertClients\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Data Conversion.Inputs[Data Conversion Input].Columns[F1]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Output].Columns[F1_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Output].Columns[F1_conv]"
                          name="F1_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].Columns[F1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertClients\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Key$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertClients\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="RedirectRow"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="RedirectRow" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          dataType="wstr"
                          length="255"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          dataType="wstr"
                          length="255"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          dataType="wstr"
                          length="255"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          dataType="wstr"
                          length="255"
                          name="F10" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertClients\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedAt" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Output].Columns[F1_conv]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertClients\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertClients\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Lookup.Inputs[Lookup Input].Columns[F1_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="F1_conv"
                          lineageId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Output].Columns[F1_conv]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup Match Output].Columns[ClientNameLookup]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup Match Output].Columns[ClientNameLookup]"
                          name="ClientNameLookup"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientName</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[F1_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="F1_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          lineageId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Output].Columns[F1_conv]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ClientName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="dbTimeStamp"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertClients\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowInsertClient</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertClients\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertClients\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\InsertClients\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\InsertClients.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\InsertClients\Lookup.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\InsertClients\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertClients.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\InsertClients\Conditional Split.Inputs[Conditional Split Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\InsertClients\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertClients.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\InsertClients\Row Count.Inputs[Row Count Input 1]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\InsertClients\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertClients.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\InsertClients\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\InsertClients\Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\InsertClients.Paths[ValidatedClients]"
                  endId="Package\Foreach Loop Container\InsertClients\Data Conversion.Inputs[Data Conversion Input]"
                  name="ValidatedClients"
                  startId="Package\Foreach Loop Container\InsertClients\Conditional Split.Outputs[ValidatedClients]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\InsertDescriptions"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{30BA3E71-6C77-4013-AEE7-D39141141A19}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="InsertDescriptions"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split"
                  componentClassID="Microsoft.ConditionalSplit"
                  contactInfo="Conditional Split;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Routes data rows to different outputs depending on the content of the data. Use conditions (SSIS expressions) to specify which rows are routed. For example, separate records that need to be cleaned from those that are ready to be loaded or route only a subset of records."
                  name="Conditional Split"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Inputs[Conditional Split Input]"
                      description="Input to the Conditional Split Transformation"
                      name="Conditional Split Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Inputs[Conditional Split Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].Columns[F5]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Outputs[ValidDescriptions]"
                      description="Output 1 of the Conditional Split Transformation"
                      errorOrTruncationOperation="Computation"
                      errorRowDisposition="FailComponent"
                      exclusionGroup="1"
                      name="ValidDescriptions"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Inputs[Conditional Split Input]"
                      truncationRowDisposition="FailComponent">
                      <properties>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the expression. This expression version uses lineage identifiers instead of column names."
                          name="Expression">[TRIM](#{Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].Columns[F5]}) != "" &amp;&amp; ![ISNULL](#{Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].Columns[F5]}) &amp;&amp; #{Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].Columns[F5]} != "Description"</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Specifies the friendly version of the expression. This expression version uses column names."
                          expressionType="Notify"
                          name="FriendlyExpression">TRIM(F5) != "" &amp;&amp; !ISNULL(F5) &amp;&amp; F5 != "Description"</property>
                        <property
                          dataType="System.Int32"
                          description="Specifies the position of the condition in the list of conditions that the transformation evaluates. The evaluation order is from the lowest to the highest value."
                          name="EvaluationOrder">0</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Outputs[Conditional Split Default Output]"
                      description="Default Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      name="Conditional Split Default Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Inputs[Conditional Split Input]">
                      <properties>
                        <property
                          dataType="System.Boolean"
                          name="IsDefaultOut">true</property>
                      </properties>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Outputs[Conditional Split Error Output]"
                      description="Error Output of the Conditional Split Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Conditional Split Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Inputs[Conditional Split Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Outputs[Conditional Split Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Inputs[Data Conversion Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].Columns[F5]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Output].Columns[F5_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Output].Columns[F5_conv]"
                          name="F5_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].Columns[F5]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Key$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].Columns[F5]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].Columns[F5]"
                          name="F5"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          dataType="wstr"
                          length="255"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          dataType="wstr"
                          length="255"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          dataType="wstr"
                          length="255"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          dataType="wstr"
                          length="255"
                          name="F10" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          name="F5" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertDescriptions\Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Description]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Description]) [refTable]
where [refTable].[Description] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">1</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DescriptionID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedAt" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Output].Columns[F5_conv]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Inputs[Lookup Input].Columns[F5_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="F5_conv"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Output].Columns[F5_conv]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Description</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup Match Output].Columns[DescriptionLookup]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Copy Column"
                          length="100"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup Match Output].Columns[DescriptionLookup]"
                          name="DescriptionLookup"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">Description</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Description]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[F5_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="F5_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Output].Columns[F5_conv]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DescriptionID]"
                          dataType="i4"
                          name="DescriptionID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Description]"
                          codePage="1252"
                          dataType="str"
                          length="100"
                          name="Description" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="dbTimeStamp"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertDescriptions\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowInsertDescriptions</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertDescriptions\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertDescriptions\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\InsertDescriptions\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\InsertDescriptions.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertDescriptions.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Inputs[Conditional Split Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\InsertDescriptions\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertDescriptions.Paths[Lookup No Match Output]"
                  endId="Package\Foreach Loop Container\InsertDescriptions\Row Count.Inputs[Row Count Input 1]"
                  name="Lookup No Match Output"
                  startId="Package\Foreach Loop Container\InsertDescriptions\Lookup.Outputs[Lookup No Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertDescriptions.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\InsertDescriptions\Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\InsertDescriptions.Paths[ValidDescriptions]"
                  endId="Package\Foreach Loop Container\InsertDescriptions\Data Conversion.Inputs[Data Conversion Input]"
                  name="ValidDescriptions"
                  startId="Package\Foreach Loop Container\InsertDescriptions\Conditional Split.Outputs[ValidDescriptions]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\InsertTimesheet"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{22B04246-37F7-479D-BE99-CB34C5849C5D}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="InsertTimesheet"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="ClientID Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Client]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Client]) [refTable]
where [refTable].[ClientName] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="ClientID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="ClientName" dataType="DT_STR" length="255" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedAt" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Inputs[Lookup Input].Columns[Client_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Client_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">ClientName</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="RedirectRow"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Match Output].Columns[ClientIDLookup]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Match Output].Columns[ClientIDLookup]"
                          name="ClientIDLookup"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">ClientID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Data Conversion"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[DayOfWeek]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DayOfWeek"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[ClientProjectName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ClientProjectName"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Total Hours"
                          cachedPrecision="5"
                          cachedScale="2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[Start Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input].Columns[End Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Date_conv]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Date_conv]"
                          name="Date_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[DayOfWeek_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[DayOfWeek_conv]"
                          name="DayOfWeek_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]"
                          name="Client_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[ClientProjectName_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[ClientProjectName_conv]"
                          name="ClientProjectName_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]"
                          name="Description_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Billable or Non Billable_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Billable or Non Billable_conv]"
                          name="Billable or Non Billable_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Comments_conv]"
                          codePage="1252"
                          dataType="str"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Comments_conv]"
                          name="Comments_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Total Hours_conv]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Total Hours_conv]"
                          name="Total Hours_conv"
                          precision="5"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Start Time_conv]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Start Time_conv]"
                          name="Start Time_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[End Time_conv]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[End Time_conv]"
                          name="End Time_conv"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F1]"
                          cachedDataType="date"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F4]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F7]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F7"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F9]"
                          cachedDataType="date"
                          cachedName="F9"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input].Columns[F10]"
                          cachedDataType="date"
                          cachedName="F10"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F1</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]"
                          name="DayOfWeek"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F2</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]"
                          name="Client"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]}) ? "Unknown Client" : #{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(F3) ? "Unknown Client" : F3</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]"
                          name="ClientProjectName"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F4</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]"
                          name="Description"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]}) ? "General" : #{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(F5) ? "General" : F5</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F6</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]"
                          dataType="wstr"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]"
                          name="Comments"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">F7</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]"
                          name="Total Hours"
                          precision="5"
                          scale="2"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]}) || [ISNULL](#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]}) ? NULL(DT_NUMERIC,5,2) : (DT_NUMERIC,5,2)(([DATEDIFF]("mi",#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]},#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]})) / 60.0)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(F9) || ISNULL(F10) ? NULL(DT_NUMERIC,5,2) : (DT_NUMERIC,5,2)((DATEDIFF("mi",F9,F10)) / 60.0)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]"
                          name="Start Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]}) ? NULL(DT_DBTIMESTAMP) : (DT_DBTIMESTAMP)#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(F9) ? NULL(DT_DBTIMESTAMP) : (DT_DBTIMESTAMP)F9</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]"
                          dataType="dbTimeStamp"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]"
                          name="End Time"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]}) ? NULL(DT_DBTIMESTAMP) : (DT_DBTIMESTAMP)#{Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(F10) ? NULL(DT_DBTIMESTAMP) : (DT_DBTIMESTAMP)F10</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column 1"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Output].Columns[EmployeeIDDerived]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Output].Columns[EmployeeIDDerived]"
                          name="EmployeeIDDerived"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column – Client No Match"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Output].Columns[ClientIDFixed]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Output].Columns[ClientIDFixed]"
                          name="ClientIDFixed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">NULL(DT_I4)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">NULL(DT_I4)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column – Desc No Match"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Output].Columns[DescriptionIDFixed]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Output].Columns[DescriptionIDFixed]"
                          name="DescriptionIDFixed"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">NULL(DT_I4)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">NULL(DT_I4)</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Derived Column – With Lookup"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Output].Columns[EmployeeID]"
                          dataType="i4"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Output].Columns[EmployeeID]"
                          name="EmployeeID"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::EmployeeID]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::EmployeeID]</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup"
                  componentClassID="Microsoft.Lookup"
                  contactInfo="Lookup;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;6"
                  description="Joins additional columns to the data flow by looking up values in a table. For example, join to the 'employee id' column the employees table to get 'hire date' and 'employee name'. We recommend this transformation when the lookup table can fit into memory."
                  name="Description ID Lookup"
                  usesDispositions="true"
                  version="6">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the SQL statement that generates the lookup table."
                      expressionType="Notify"
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from [dbo].[Description]</property>
                    <property
                      dataType="System.String"
                      description="Specifies a SQL statement that uses parameters to generate the lookup table."
                      expressionType="Notify"
                      name="SqlCommandParam"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">select * from (select * from [dbo].[Description]) [refTable]
where [refTable].[Description] = ?</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the type of connection used to access the reference dataset."
                      name="ConnectionType"
                      typeConverter="LookupConnectionType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the cache type of the lookup table."
                      name="CacheType"
                      typeConverter="CacheType">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies how the Lookup transformation handles rows without matching entries in the reference data set."
                      name="NoMatchBehavior"
                      typeConverter="LookupNoMatchBehavior">0</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage of the cache that is allocated for rows with no matching entries in the reference dataset."
                      name="NoMatchCachePercentage">0</property>
                    <property
                      dataType="System.Int32"
                      description="Maximum Memory Usage for Reference Cache on a 32 bit platform."
                      name="MaxMemoryUsage">25</property>
                    <property
                      dataType="System.Int64"
                      description="Maximum Memory Usage for Reference Cache on a 64 bit platform."
                      name="MaxMemoryUsage64">25</property>
                    <property
                      dataType="System.String"
                      description="Indicates whether to reference metadata in an XML format."
                      name="ReferenceMetadataXml">&lt;referenceMetadata&gt;&lt;referenceColumns&gt;&lt;referenceColumn name="DescriptionID" dataType="DT_I4" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;referenceColumn name="Description" dataType="DT_STR" length="100" precision="0" scale="0" codePage="1252"/&gt;&lt;referenceColumn name="CreatedAt" dataType="DT_DBTIMESTAMP" length="0" precision="0" scale="0" codePage="0"/&gt;&lt;/referenceColumns&gt;&lt;/referenceMetadata&gt;</property>
                    <property
                      containsID="true"
                      dataType="System.String"
                      description="Specifies the list of lineage identifiers that map to the parameters that the SQL statement in the SQLCommand property uses. Entries in the list are separated by semicolons."
                      name="ParameterMap">#{Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]};</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Determines whether duplicate keys in the reference data should be treated as errors when full cache mode is used."
                      name="TreatDuplicateKeysAsError">false</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="Connection manager used to access lookup data."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Inputs[Lookup Input]"
                      name="Lookup Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Inputs[Lookup Input].Columns[Description_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Description_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table that a column joins."
                              name="JoinToReferenceColumn">Description</property>
                            <property
                              dataType="System.Null"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn" />
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Match Output]"
                      errorOrTruncationOperation="Lookup"
                      errorRowDisposition="RedirectRow"
                      exclusionGroup="1"
                      name="Lookup Match Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Match Output].Columns[DescriptionIDLookup]"
                          dataType="i4"
                          errorOrTruncationOperation="Copy Column"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Match Output].Columns[DescriptionIDLookup]"
                          name="DescriptionIDLookup"
                          truncationRowDisposition="RedirectRow">
                          <properties>
                            <property
                              dataType="System.String"
                              description="Specifies the column in the reference table from which a column is copied."
                              name="CopyFromReferenceColumn">DescriptionID</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup No Match Output]"
                      description="The Lookup output that handles rows with no matching entries in the reference dataset. Use this output when the NoMatchBehavior property is set to &quot;Send rows with no matching entries to the no match output.&quot;"
                      exclusionGroup="1"
                      name="Lookup No Match Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Inputs[Lookup Input]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Lookup Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Inputs[Lookup Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source"
                  componentClassID="Microsoft.ExcelSource"
                  contactInfo="Excel Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Excel Source"
                  name="Excel Source"
                  usesDispositions="true"
                  validateExternalMetadata="False"
                  version="1">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">May$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">SELECT * FROM [May$A9:J100]</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::ExcelSQL</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mapping from parameters in the SQL command to variables."
                      name="ParameterMapping"></property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output]"
                      name="Excel Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]"
                          name="F1"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]"
                          name="F2"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]"
                          name="F3"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]"
                          name="F4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]"
                          name="F5"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]"
                          name="F6"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]"
                          dataType="wstr"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]"
                          name="F7"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F8]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F8]"
                          name="F8"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]"
                          name="F9"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]"
                          dataType="date"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]"
                          name="F10"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F1]"
                          dataType="date"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F2]"
                          dataType="wstr"
                          length="255"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F4]"
                          dataType="wstr"
                          length="255"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F6]"
                          dataType="wstr"
                          length="255"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F7]"
                          dataType="wstr"
                          length="255"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F8]"
                          dataType="date"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F9]"
                          dataType="date"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].ExternalColumns[F10]"
                          dataType="date"
                          name="F10" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output]"
                      isErrorOut="true"
                      name="Excel Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F3]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F3]"
                          name="F3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F4]"
                          name="F4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F5]"
                          name="F5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F6]"
                          name="F6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F7]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F7]"
                          name="F7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F8]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F8]"
                          name="F8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F9]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F9]"
                          name="F9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F10]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[F10]"
                          name="F10" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination"
                  componentClassID="Microsoft.OLEDBDestination"
                  contactInfo="OLE DB Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
                  description="OLE DB Destination"
                  name="OLE DB Destination"
                  usesDispositions="true"
                  version="4">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">[dbo].[Timesheet]</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions">TABLOCK,CHECK_CONSTRAINTS</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      connectionManagerRefId="Package.ConnectionManagers[YUVEER.SSISTimesheetIntegrationDb]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="RedirectRow"
                      hasSideEffects="true"
                      name="OLE DB Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Date_conv]"
                          cachedDataType="date"
                          cachedName="Date_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DayOfWeek_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DayOfWeek_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientIDLookup]"
                          cachedDataType="i4"
                          cachedName="ClientIDLookup"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientIDLookup]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[ClientProjectName_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ClientProjectName_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProjectName]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[DescriptionIDLookup]"
                          cachedDataType="i4"
                          cachedName="DescriptionIDLookup"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DescriptionID]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DescriptionIDLookup]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Billable or Non Billable_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Billable or Non Billable_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Comments_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Comments_conv"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Start Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Start Time"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[End Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="End Time"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[Total Hours_conv]"
                          cachedDataType="numeric"
                          cachedName="Total Hours_conv"
                          cachedPrecision="5"
                          cachedScale="2"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours_conv]" />
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].Columns[EmployeeIDDerived]"
                          cachedDataType="i4"
                          cachedName="EmployeeIDDerived"
                          externalMetadataColumnId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Output].Columns[EmployeeIDDerived]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TimesheetID]"
                          dataType="i4"
                          name="TimesheetID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EmployeeID]"
                          dataType="i4"
                          name="EmployeeID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Date]"
                          dataType="dbDate"
                          name="Date" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DayOfWeek]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="DayOfWeek" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ClientID]"
                          dataType="i4"
                          name="ClientID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[ProjectName]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="ProjectName" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[DescriptionID]"
                          dataType="i4"
                          name="DescriptionID" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Billable]"
                          codePage="1252"
                          dataType="str"
                          length="50"
                          name="Billable" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[Comments]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          name="Comments" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[TotalHours]"
                          dataType="numeric"
                          name="TotalHours"
                          precision="5"
                          scale="2" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[StartTime]"
                          dataType="dbTime2"
                          name="StartTime"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[EndTime]"
                          dataType="dbTime2"
                          name="EndTime"
                          scale="7" />
                        <externalMetadataColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input].ExternalColumns[CreatedAt]"
                          dataType="dbTimeStamp"
                          name="CreatedAt" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="OLE DB Destination Error Output"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Outputs[OLE DB Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Row Count"
                  componentClassID="Microsoft.RowCount"
                  contactInfo="Row Count;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Counts rows as they pass through a data flow. For example, use the number of rows processed to determine whether or not to perform cleanup operations, or update text in an e-mail message to communicate processing status."
                  name="Row Count">
                  <properties>
                    <property
                      dataType="System.String"
                      description="Specifies the variable to hold the row count."
                      name="VariableName">User::RowInsertTimesheet</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Row Count.Inputs[Row Count Input 1]"
                      hasSideEffects="true"
                      name="Row Count Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Row Count.Outputs[Row Count Output 1]"
                      name="Row Count Output 1"
                      synchronousInputId="Package\Foreach Loop Container\InsertTimesheet\Row Count.Inputs[Row Count Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Foreach Loop Container\InsertTimesheet\Union All"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1]"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F1]"
                          cachedDataType="date"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F2]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F3]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F4]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F4]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F5]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F6]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F7]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F7"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F7]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F8]"
                          cachedDataType="date"
                          cachedName="F8"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F8]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F8]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F9]"
                          cachedDataType="date"
                          cachedName="F9"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F9]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[F10]"
                          cachedDataType="date"
                          cachedName="F10"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F10]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[DayOfWeek]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DayOfWeek"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[ClientProjectName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ClientProjectName"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Total Hours"
                          cachedPrecision="5"
                          cachedScale="2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Start Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[End Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Date_conv]"
                          cachedDataType="date"
                          cachedName="Date_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Date_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[DayOfWeek_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DayOfWeek_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[DayOfWeek_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Client_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Client_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[ClientProjectName_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ClientProjectName_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[ClientProjectName_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Description_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Description_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Billable or Non Billable_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Billable or Non Billable_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Billable or Non Billable_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Comments_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Comments_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Comments_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Total Hours_conv]"
                          cachedDataType="numeric"
                          cachedName="Total Hours_conv"
                          cachedPrecision="5"
                          cachedScale="2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Total Hours_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[Start Time_conv]"
                          cachedDataType="date"
                          cachedName="Start Time_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Start Time_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[End Time_conv]"
                          cachedDataType="date"
                          cachedName="End Time_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[End Time_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[ClientIDLookup]"
                          cachedDataType="i4"
                          cachedName="ClientIDLookup"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Match Output].Columns[ClientIDLookup]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientIDLookup]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[DescriptionIDLookup]"
                          cachedDataType="i4"
                          cachedName="DescriptionIDLookup"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Match Output].Columns[DescriptionIDLookup]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DescriptionIDLookup]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1].Columns[EmployeeID]"
                          cachedDataType="i4"
                          cachedName="EmployeeID"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Output].Columns[EmployeeID]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[EmployeeID]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F1]"
                          cachedDataType="date"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F2]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F3]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F4]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F4]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F5]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F6]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F7]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F7"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F7]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F8]"
                          cachedDataType="date"
                          cachedName="F8"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F8]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F8]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F9]"
                          cachedDataType="date"
                          cachedName="F9"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F9]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[F10]"
                          cachedDataType="date"
                          cachedName="F10"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F10]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[DayOfWeek]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DayOfWeek"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[ClientProjectName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ClientProjectName"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Total Hours"
                          cachedPrecision="5"
                          cachedScale="2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Start Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[End Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Date_conv]"
                          cachedDataType="date"
                          cachedName="Date_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Date_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[DayOfWeek_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DayOfWeek_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[DayOfWeek_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Client_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Client_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[ClientProjectName_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ClientProjectName_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[ClientProjectName_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Description_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Description_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Billable or Non Billable_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Billable or Non Billable_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Billable or Non Billable_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Comments_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Comments_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Comments_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Total Hours_conv]"
                          cachedDataType="numeric"
                          cachedName="Total Hours_conv"
                          cachedPrecision="5"
                          cachedScale="2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Total Hours_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[Start Time_conv]"
                          cachedDataType="date"
                          cachedName="Start Time_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Start Time_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[End Time_conv]"
                          cachedDataType="date"
                          cachedName="End Time_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[End Time_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2].Columns[ClientIDLookup]"
                          cachedDataType="i4"
                          cachedName="ClientIDLookup"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Match Output].Columns[ClientIDLookup]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientIDLookup]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3]"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F1]"
                          cachedDataType="date"
                          cachedName="F1"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F2]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F2]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F2]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F3]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F3"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F3]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F3]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F4]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F4]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F4]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F5]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F5"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F5]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F5]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F6]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F6"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F6]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F6]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F7]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="F7"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F7]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F7]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F8]"
                          cachedDataType="date"
                          cachedName="F8"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F8]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F8]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F9]"
                          cachedDataType="date"
                          cachedName="F9"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F9]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F9]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[F10]"
                          cachedDataType="date"
                          cachedName="F10"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output].Columns[F10]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F10]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[DayOfWeek]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="DayOfWeek"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[DayOfWeek]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Client]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Client"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Client]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[ClientProjectName]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="ClientProjectName"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[ClientProjectName]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Description]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Description"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Description]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Billable or Non Billable]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Billable or Non Billable"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Billable or Non Billable]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Comments]"
                          cachedDataType="wstr"
                          cachedLength="255"
                          cachedName="Comments"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Comments]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Total Hours]"
                          cachedDataType="numeric"
                          cachedName="Total Hours"
                          cachedPrecision="5"
                          cachedScale="2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Total Hours]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Start Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="Start Time"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[Start Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[End Time]"
                          cachedDataType="dbTimeStamp"
                          cachedName="End Time"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output].Columns[End Time]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Date_conv]"
                          cachedDataType="date"
                          cachedName="Date_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Date_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[DayOfWeek_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="DayOfWeek_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[DayOfWeek_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Client_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Client_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Client_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[ClientProjectName_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="ClientProjectName_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[ClientProjectName_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Description_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Description_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Description_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Billable or Non Billable_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Billable or Non Billable_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Billable or Non Billable_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Comments_conv]"
                          cachedCodepage="1252"
                          cachedDataType="str"
                          cachedLength="255"
                          cachedName="Comments_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Comments_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Total Hours_conv]"
                          cachedDataType="numeric"
                          cachedName="Total Hours_conv"
                          cachedPrecision="5"
                          cachedScale="2"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Total Hours_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[Start Time_conv]"
                          cachedDataType="date"
                          cachedName="Start Time_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[Start Time_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time_conv]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3].Columns[End Time_conv]"
                          cachedDataType="date"
                          cachedName="End Time_conv"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output].Columns[End Time_conv]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time_conv]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 4]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 4">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F1]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F1]"
                          name="F1" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F2]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F2]"
                          name="F2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F3]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F3]"
                          name="F3" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F4]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F4]"
                          name="F4" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F5]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F5]"
                          name="F5" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F6]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F6]"
                          name="F6" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F7]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F7]"
                          name="F7" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F8]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F8]"
                          name="F8" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F9]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F9]"
                          name="F9" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F10]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[F10]"
                          name="F10" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek]"
                          name="DayOfWeek" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client]"
                          name="Client" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName]"
                          name="ClientProjectName" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description]"
                          name="Description" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable]"
                          name="Billable or Non Billable" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments]"
                          dataType="wstr"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments]"
                          name="Comments" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours]"
                          name="Total Hours"
                          precision="5"
                          scale="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time]"
                          name="Start Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]"
                          dataType="dbTimeStamp"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time]"
                          name="End Time" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date_conv]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Date_conv]"
                          name="Date_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek_conv]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DayOfWeek_conv]"
                          name="DayOfWeek_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client_conv]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Client_conv]"
                          name="Client_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName_conv]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientProjectName_conv]"
                          name="ClientProjectName_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description_conv]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Description_conv]"
                          name="Description_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable_conv]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Billable or Non Billable_conv]"
                          name="Billable or Non Billable_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments_conv]"
                          codePage="1252"
                          dataType="str"
                          length="255"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Comments_conv]"
                          name="Comments_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours_conv]"
                          dataType="numeric"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Total Hours_conv]"
                          name="Total Hours_conv"
                          precision="5"
                          scale="2" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time_conv]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[Start Time_conv]"
                          name="Start Time_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time_conv]"
                          dataType="date"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[End Time_conv]"
                          name="End Time_conv" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientIDLookup]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[ClientIDLookup]"
                          name="ClientIDLookup" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DescriptionIDLookup]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[DescriptionIDLookup]"
                          name="DescriptionIDLookup" />
                        <outputColumn
                          refId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[EmployeeID]"
                          dataType="i4"
                          lineageId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1].Columns[EmployeeID]"
                          name="EmployeeID" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Data Conversion Output]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Inputs[Lookup Input]"
                  name="Data Conversion Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Data Conversion.Inputs[Data Conversion Input]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output1]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 1]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output2]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 2]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output3]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Union All.Inputs[Union All Input 3]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output4]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Row Count.Inputs[Row Count Input 1]"
                  name="Derived Column Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Excel Source Output]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Derived Column.Inputs[Derived Column Input]"
                  name="Excel Source Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Excel Source.Outputs[Excel Source Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Lookup Error Output]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match.Inputs[Derived Column Input]"
                  name="Lookup Error Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Lookup Error Output1]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match.Inputs[Derived Column Input]"
                  name="Lookup Error Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Error Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Lookup Match Output]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup.Inputs[Derived Column Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Lookup Match Output1]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup.Inputs[Lookup Input]"
                  name="Lookup Match Output"
                  startId="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup.Outputs[Lookup Match Output]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Row Count Output 1]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination.Inputs[OLE DB Destination Input]"
                  name="Row Count Output 1"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Row Count.Outputs[Row Count Output 1]" />
                <path
                  refId="Package\Foreach Loop Container\InsertTimesheet.Paths[Union All Output 1]"
                  endId="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1.Inputs[Derived Column Input]"
                  name="Union All Output 1"
                  startId="Package\Foreach Loop Container\InsertTimesheet\Union All.Outputs[Union All Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Set Default Null Values for Expense"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{0baa162f-953e-46ad-99e6-fc21bd459db7}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set Default Null Values for Expense"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="UPDATE Expense&#xA;SET &#xA;    Month = ISNULL(Month, '1900-01-01'),&#xA;    ExpenseDescription = ISNULL(ExpenseDescription, 'Unspecified'),&#xA;    Type = ISNULL(Type, 'Unspecified'),&#xA;    ZarCost = ISNULL(ZarCost, -1.00)&#xA;WHERE EmployeeID = ?;&#xA;&#xA;SELECT @@ROWCOUNT AS RowsUpdated;&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="RowsUpdated"
                SQLTask:DtsVariableName="User::ExpenseRowUpdated" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Skip Already Imported Files"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{79C4324E-1B12-47CB-BFBC-0B99958BDD47}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Skip Already Imported Files"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="SELECT &#xA;  CASE WHEN EXISTS (&#xA;    SELECT 1 &#xA;    FROM dbo.AuditLog &#xA;    WHERE FileProcessed = ?&#xA;  ) THEN 1 ELSE 0 END AS AlreadyProcessed;&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="AlreadyProcessed"
                SQLTask:DtsVariableName="User::SkipFile" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="500" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update 1899 Dates to NULL"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{F9DF5B3F-289E-4600-A744-BB305AA9FA0B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update 1899 Dates to NULL"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="DECLARE @Total INT = 0;&#xA;&#xA;-- Fix SubmissionDate where NULL or 1899-12-30&#xA;UPDATE Leave&#xA;SET SubmissionDate = DATEADD(DAY, -1, StartDate)&#xA;WHERE SubmissionDate IS NULL OR SubmissionDate = '1899-12-30';&#xA;SET @Total += @@ROWCOUNT;&#xA;&#xA;-- Standardize ApprovalObtained to 'Yes'&#xA;UPDATE Leave&#xA;SET ApprovalObtained = 'Yes'&#xA;WHERE ApprovalObtained IS NULL OR LOWER(ApprovalObtained) &lt;&gt; 'yes';&#xA;SET @Total += @@ROWCOUNT;&#xA;&#xA;-- Standardize SickNoteProvided to 'No'&#xA;UPDATE Leave&#xA;SET SickNoteProvided = 'No'&#xA;WHERE SickNoteProvided IS NULL OR LOWER(SickNoteProvided) &lt;&gt; 'no';&#xA;SET @Total += @@ROWCOUNT;&#xA;&#xA;-- Return total affected rows&#xA;SELECT @Total AS RowsUpdated;&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="RowsUpdated"
                SQLTask:DtsVariableName="User::LeaveRowsUpdated" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update Expenses Audit Log for Default Values FIXED"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{227ef3b6-648e-42e1-83e3-cfc3e0205493}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update Expenses Audit Log for Default Values FIXED"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="INSERT INTO dbo.AuditLog &#xA;(PackageName, TaskName, OperationType, EntityType, [RowCount], FileProcessed, EmployeeID, EmployeeName)&#xA;VALUES (?, 'UpdateExpense', 'Update', 'Expense', ?, ?, ?, ?)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="0"
                SQLTask:DtsVariableName="System::PackageName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="1"
                SQLTask:DtsVariableName="User::ExpenseRowUpdated"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="2"
                SQLTask:DtsVariableName="User::ExcelFilePath"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="3"
                SQLTask:DtsVariableName="User::EmployeeID"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="3"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="4"
                SQLTask:DtsVariableName="User::EmployeeName"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="129"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Foreach Loop Container\Update NULLS in Project Name"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Execute SQL Task"
          DTS:DTSID="{b21cd2e0-56a1-4712-945a-3e327a042dbf}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Update NULLS in Project Name"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2022; © 2022 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="1">
          <DTS:Variables />
          <DTS:LoggingOptions
            DTS:FilterKind="0" />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{AF8C8FF8-A1C2-4DA1-BA48-200A38F17800}"
              SQLTask:SqlStatementSource="DECLARE @Total INT = 0;&#xA;&#xA;-- Update NULL project names&#xA;UPDATE Timesheet&#xA;SET ProjectName = 'Unspecified'&#xA;WHERE ProjectName IS NULL;&#xA;SET @Total += @@ROWCOUNT;&#xA;&#xA;-- Convert StartTime and EndTime to 'HH:MM' format&#xA;UPDATE Timesheet&#xA;SET &#xA;    StartTime = CONVERT(VARCHAR(5), StartTime, 108),&#xA;    EndTime = CONVERT(VARCHAR(5), EndTime, 108);&#xA;SET @Total += @@ROWCOUNT;&#xA;&#xA;-- Return total rows affected&#xA;SELECT @Total AS RowsUpdated;&#xA;"
              SQLTask:ResultType="ResultSetType_SingleRow" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ResultBinding
                SQLTask:ResultName="RowsUpdated"
                SQLTask:DtsVariableName="User::TimesheetRowsUpdated" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{F112D316-AE9A-4246-8267-2C0DD5312247}"
          DTS:From="Package\Foreach Loop Container\Extract Employee from Folder"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Foreach Loop Container\Insert Employee If Needed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          DTS:CreationName=""
          DTS:DTSID="{802D3985-A879-4022-96F2-ACAD2ABD0987}"
          DTS:From="Package\Foreach Loop Container\Insert Employee If Needed"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 1"
          DTS:To="Package\Foreach Loop Container\Get Employee ID" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 10]"
          DTS:CreationName=""
          DTS:DTSID="{7EA77DDC-2428-478B-BB68-02B14AD63427}"
          DTS:From="Package\Foreach Loop Container\InsertTimesheet"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 10"
          DTS:To="Package\Foreach Loop Container\Update NULLS in Project Name" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 11]"
          DTS:CreationName=""
          DTS:DTSID="{C029CD3B-1B9D-4F07-8459-B15630E6F168}"
          DTS:From="Package\Foreach Loop Container\InsertDescriptions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 11"
          DTS:To="Package\Foreach Loop Container\Insert Timesheet into Audit table FIXED 1" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 12]"
          DTS:CreationName=""
          DTS:DTSID="{824D9B9D-D668-4F64-94FA-8758AE3F3D2A}"
          DTS:From="Package\Foreach Loop Container\Insert Expenses Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 12"
          DTS:To="Package\Foreach Loop Container\Set Default Null Values for Expense" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 13]"
          DTS:CreationName=""
          DTS:DTSID="{FB003150-4EA4-4B34-9F0C-9AC5E3BAE6BD}"
          DTS:From="Package\Foreach Loop Container\Update NULLS in Project Name"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 13"
          DTS:To="Package\Foreach Loop Container\Insert Updated Values to Audit Log for Timesheet FIXED" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 14]"
          DTS:CreationName=""
          DTS:DTSID="{94206E89-A44C-4B82-9256-C48DF77BF938}"
          DTS:From="Package\Foreach Loop Container\Update 1899 Dates to NULL"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 14"
          DTS:To="Package\Foreach Loop Container\Add Updated Default Leave Values to Audit Table FIXED" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 15]"
          DTS:CreationName=""
          DTS:DTSID="{6C086D50-ADCB-44FF-B322-810936E66897}"
          DTS:EvalOp="1"
          DTS:Expression="@[User::SkipFile] == FALSE"
          DTS:From="Package\Foreach Loop Container\Skip Already Imported Files"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 15"
          DTS:To="Package\Foreach Loop Container\Get Employee ID" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 16]"
          DTS:CreationName=""
          DTS:DTSID="{F6A20DD4-515B-4A40-909C-521BC15DBBFB}"
          DTS:From="Package\Foreach Loop Container\Set Default Null Values for Expense"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 16"
          DTS:To="Package\Foreach Loop Container\Update Expenses Audit Log for Default Values FIXED" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 17]"
          DTS:CreationName=""
          DTS:DTSID="{456DC91E-6F69-4151-92C3-865E73A8F64D}"
          DTS:From="Package\Foreach Loop Container\Update Expenses Audit Log for Default Values FIXED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 17"
          DTS:To="Package\Foreach Loop Container\Insert Expense into Audit table" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 18]"
          DTS:CreationName=""
          DTS:DTSID="{D2033F9F-811A-403E-BB53-F1E9B853EE64}"
          DTS:From="Package\Foreach Loop Container\Add Updated Default Leave Values to Audit Table FIXED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 18"
          DTS:To="Package\Foreach Loop Container\Insert Leave into Audit Table Fixed" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 19]"
          DTS:CreationName=""
          DTS:DTSID="{11D5F3BF-5231-4BA0-9B62-715F0A822530}"
          DTS:From="Package\Foreach Loop Container\Insert Updated Values to Audit Log for Timesheet FIXED"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 19"
          DTS:To="Package\Foreach Loop Container\Insert Timesheet into Audit table FIXED" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          DTS:CreationName=""
          DTS:DTSID="{6C9E912E-CE23-4B07-824C-3497F9DC0DF6}"
          DTS:From="Package\Foreach Loop Container\InsertDescriptions"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 2"
          DTS:To="Package\Foreach Loop Container\InsertTimesheet" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          DTS:CreationName=""
          DTS:DTSID="{1C58DAEF-F965-4820-A2DE-D6EC0FF7D9CF}"
          DTS:From="Package\Foreach Loop Container\Get Employee ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 3"
          DTS:To="Package\Foreach Loop Container\InsertClients" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          DTS:CreationName=""
          DTS:DTSID="{CA5FE65F-579F-4E0F-8997-C4E97411D3C8}"
          DTS:From="Package\Foreach Loop Container\Get Employee ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 4"
          DTS:To="Package\Foreach Loop Container\InsertDescriptions" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          DTS:CreationName=""
          DTS:DTSID="{EF57F22C-C7EF-41A9-9BE3-77E5A21E87F7}"
          DTS:From="Package\Foreach Loop Container\Get Employee ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 5"
          DTS:To="Package\Foreach Loop Container\Get Contact Information + Submission Daate" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          DTS:CreationName=""
          DTS:DTSID="{A03F459C-3E8C-4116-BC3F-BCE579F18855}"
          DTS:From="Package\Foreach Loop Container\Get Employee ID"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 6"
          DTS:To="Package\Foreach Loop Container\Insert Expenses Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{94CF46BA-8143-4FC2-9D46-9697FCCAB113}"
          DTS:From="Package\Foreach Loop Container\Get Contact Information + Submission Daate"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Foreach Loop Container\Insert Leave Data" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          DTS:CreationName=""
          DTS:DTSID="{70A81114-7B8B-41B6-81E3-3C3D40958016}"
          DTS:From="Package\Foreach Loop Container\Insert Leave Data"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 8"
          DTS:To="Package\Foreach Loop Container\Update 1899 Dates to NULL" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 9]"
          DTS:CreationName=""
          DTS:DTSID="{439AEFE6-1A0D-4335-97AA-AFF1CBC37BB3}"
          DTS:From="Package\Foreach Loop Container\InsertClients"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 9"
          DTS:To="Package\Foreach Loop Container\Insert Client into Audit table" />
      </DTS:PrecedenceConstraints>
      <DTS:ForEachVariableMappings>
        <DTS:ForEachVariableMapping
          DTS:CreationName=""
          DTS:DTSID="{DDE2BD46-2CBB-4684-A9EE-37A8A604D76D}"
          DTS:ObjectName="{DDE2BD46-2CBB-4684-A9EE-37A8A604D76D}"
          DTS:ValueIndex="0"
          DTS:VariableName="User::ExcelFilePath" />
      </DTS:ForEachVariableMappings>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:EventHandlers>
    <DTS:EventHandler
      DTS:refId="Package.EventHandlers[OnError]"
      DTS:CreationName="OnError"
      DTS:DTSID="{0026D829-593F-4E64-B972-135D951BC897}"
      DTS:EventID="-1073741889"
      DTS:EventName="OnError"
      DTS:LocaleID="-1">
      <DTS:Variables>
        <DTS:Variable
          DTS:CreationName=""
          DTS:Description="The propagate property of the event"
          DTS:DTSID="{FA15A572-FEBF-4393-979F-DD0480F35AD9}"
          DTS:IncludeInDebugDump="6789"
          DTS:Namespace="System"
          DTS:ObjectName="Propagate">
          <DTS:VariableValue
            DTS:DataType="11">-1</DTS:VariableValue>
        </DTS:Variable>
      </DTS:Variables>
      <DTS:Executables />
    </DTS:EventHandler>
  </DTS:EventHandlers>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="64" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="220,42.6666666666667"
          Id="Package\Foreach Loop Container\Extract Employee from Folder"
          TopLeft="213.37697483416,148.833330712821" />
        <NodeLayout
          Size="290.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Get Contact Information + Submission Daate"
          TopLeft="617.904880082682,785.8654859879" />
        <NodeLayout
          Size="161.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Get Employee ID"
          TopLeft="231.501974023909,376.675433474318" />
        <NodeLayout
          Size="209.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Client into Audit table"
          TopLeft="23.0991094367618,838.571759765415" />
        <NodeLayout
          Size="205.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Employee If Needed"
          TopLeft="215.25197475034,258.307013721348" />
        <NodeLayout
          Size="181.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Expenses Data"
          TopLeft="285.043638297077,668.149114484523" />
        <NodeLayout
          Size="164,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Leave Data"
          TopLeft="683.184646139814,946.419788120894" />
        <NodeLayout
          Size="139.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertClients"
          TopLeft="54.2847200413753,640.992473178686" />
        <NodeLayout
          Size="165.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertDescriptions"
          TopLeft="538.426563477914,380.563486898628" />
        <NodeLayout
          Size="156,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet"
          TopLeft="567.928622598629,492.058473143106" />
        <NodeLayout
          Size="213.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Update 1899 Dates to NULL"
          TopLeft="657.404879449383,1059.71928509489" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint]"
          TopLeft="320.647808125584,191.499997379487">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66.8070163418609"
              Start="0,0"
              End="0,59.3070163418609">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,59.3070163418609" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 1]"
          TopLeft="315.043641053792,300.973680388015">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.7017530863031"
              Start="0,0"
              End="0,68.2017530863031">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.2017530863031" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 2]"
          TopLeft="621.093230144581,423.230153565295">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.8353924540485,68.8283195778116"
              Start="0,0"
              End="24.8353924540485,61.3283195778116">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.4141597889058" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.4141597889058"
                    Point2="0,34.4141597889058"
                    Point3="4,34.4141597889058" />
                  <mssgle:LineSegment
                    End="20.8353924540485,34.4141597889058" />
                  <mssgle:CubicBezierSegment
                    Point1="20.8353924540485,34.4141597889058"
                    Point2="24.8353924540485,34.4141597889058"
                    Point3="24.8353924540485,38.4141597889058" />
                  <mssgle:LineSegment
                    End="24.8353924540485,61.3283195778116" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 3]"
          TopLeft="273.835307357243,419.342100140985">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-149.883920649201,221.650373037701"
              Start="0,0"
              End="-149.883920649201,214.150373037701">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,72.286171750103" />
                  <mssgle:CubicBezierSegment
                    Point1="0,72.286171750103"
                    Point2="0,76.286171750103"
                    Point3="-4,76.286171750103" />
                  <mssgle:LineSegment
                    End="-145.883920649201,76.286171750103" />
                  <mssgle:CubicBezierSegment
                    Point1="-145.883920649201,76.286171750103"
                    Point2="-149.883920649201,76.286171750103"
                    Point3="-149.883920649201,80.286171750103" />
                  <mssgle:LineSegment
                    End="-149.883920649201,214.150373037701" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 4]"
          TopLeft="392.835307357243,399.952793519806">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="145.591256120672,0"
              Start="0,0"
              End="138.091256120672,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="138.091256120672,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 5]"
          TopLeft="375.844876932278,419.342100140985">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="387.393336483737,366.523385846916"
              Start="0,0"
              End="387.393336483737,359.023385846916">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,197.937088035142" />
                  <mssgle:CubicBezierSegment
                    Point1="0,197.937088035142"
                    Point2="0,201.937088035142"
                    Point3="4,201.937088035142" />
                  <mssgle:LineSegment
                    End="383.393336483737,201.937088035142" />
                  <mssgle:CubicBezierSegment
                    Point1="383.393336483737,201.937088035142"
                    Point2="387.393336483737,201.937088035142"
                    Point3="387.393336483737,205.937088035142" />
                  <mssgle:LineSegment
                    End="387.393336483737,359.023385846916" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 6]"
          TopLeft="315.596018571721,419.342100140985">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,248.807014343538"
              Start="0,0"
              End="0,241.307014343538">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,241.307014343538" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 7]"
          TopLeft="764.211429777915,828.532152654567">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,117.887635466327"
              Start="0,0"
              End="0,110.387635466327">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,110.387635466327" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 8]"
          TopLeft="764.628096127932,989.08645478756">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,70.632830307332"
              Start="0,0"
              End="0,63.132830307332">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.132830307332" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 9]"
          TopLeft="125.858581405735,683.659139845352">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,154.912619920063"
              Start="0,0"
              End="0,147.412619920063">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,147.412619920063" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="209.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Skip Already Imported Files"
          TopLeft="6.63888593970073,315.298241156621" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 15]"
          TopLeft="215.972219273034,336.631574489954">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="70.6408658619865,40.043858984364"
              Start="0,0"
              End="70.6408658619865,32.543858984364">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="66.6408658619865,0" />
                  <mssgle:CubicBezierSegment
                    Point1="66.6408658619865,0"
                    Point2="70.6408658619865,0"
                    Point3="70.6408658619865,4" />
                  <mssgle:LineSegment
                    End="70.6408658619865,32.543858984364" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="62.6408658619865,-22,16,16"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="249.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Set Default Null Values for Expense"
          TopLeft="270.060348522818,810.387551803076" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 12]"
          TopLeft="375.710304963744,710.81578115119">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="19.0167102257411,99.5717706518861"
              Start="0,0"
              End="19.0167102257411,92.0717706518861">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.7858853259431" />
                  <mssgle:CubicBezierSegment
                    Point1="0,45.7858853259431"
                    Point2="0,49.7858853259431"
                    Point3="4,49.7858853259431" />
                  <mssgle:LineSegment
                    End="15.0167102257411,49.7858853259431" />
                  <mssgle:CubicBezierSegment
                    Point1="15.0167102257411,49.7858853259431"
                    Point2="19.0167102257411,49.7858853259431"
                    Point3="19.0167102257411,53.7858853259431" />
                  <mssgle:LineSegment
                    End="19.0167102257411,92.0717706518861" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="229.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Update NULLS in Project Name"
          TopLeft="791.254235480046,547.803205271278" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 10]"
          TopLeft="723.928622598629,513.391806476439">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67.3256128814161,55.7447321281724"
              Start="0,0"
              End="59.8256128814161,55.7447321281724">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.662806440708,0" />
                  <mssgle:CubicBezierSegment
                    Point1="29.662806440708,0"
                    Point2="33.662806440708,0"
                    Point3="33.662806440708,4" />
                  <mssgle:LineSegment
                    End="33.662806440708,51.7447321281724" />
                  <mssgle:CubicBezierSegment
                    Point1="33.662806440708,51.7447321281724"
                    Point2="33.662806440708,55.7447321281724"
                    Point3="37.662806440708,55.7447321281724" />
                  <mssgle:LineSegment
                    End="59.8256128814161,55.7447321281724" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="333.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Update Expenses Audit Log for Default Values FIXED"
          TopLeft="249.801268231889,946.377856934074" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 16]"
          TopLeft="394.727015189485,853.054218469742">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="21.7409197090706,93.3236384643311"
              Start="0,0"
              End="21.7409197090706,85.8236384643311">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,42.6618192321656" />
                  <mssgle:CubicBezierSegment
                    Point1="0,42.6618192321656"
                    Point2="0,46.6618192321656"
                    Point3="4,46.6618192321656" />
                  <mssgle:LineSegment
                    End="17.7409197090706,46.6618192321656" />
                  <mssgle:CubicBezierSegment
                    Point1="17.7409197090706,46.6618192321656"
                    Point2="21.7409197090706,46.6618192321656"
                    Point3="21.7409197090706,50.6618192321656" />
                  <mssgle:LineSegment
                    End="21.7409197090706,85.8236384643311" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="224,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Expense into Audit table"
          TopLeft="274.427335507086,1074.68579451517" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 17]"
          TopLeft="416.467934898555,989.04452360074">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-30.0405993914696,85.6412709144258"
              Start="0,0"
              End="-30.0405993914696,78.1412709144258">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.8206354572129" />
                  <mssgle:CubicBezierSegment
                    Point1="0,38.8206354572129"
                    Point2="0,42.8206354572129"
                    Point3="-4,42.8206354572129" />
                  <mssgle:LineSegment
                    End="-26.0405993914696,42.8206354572129" />
                  <mssgle:CubicBezierSegment
                    Point1="-26.0405993914696,42.8206354572129"
                    Point2="-30.0405993914696,42.8206354572129"
                    Point3="-30.0405993914696,46.8206354572129" />
                  <mssgle:LineSegment
                    End="-30.0405993914696,78.1412709144258" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="349.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Add Updated Default Leave Values to Audit Table FIXED"
          TopLeft="589.462286458891,1162.24560216622" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 14]"
          TopLeft="764.100249620804,1102.38595176156">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.8596504046584"
              Start="0,0"
              End="0,52.3596504046584">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.3596504046584" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="244,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Leave into Audit Table Fixed"
          TopLeft="647.257544170502,1270.70561810885" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 18]"
          TopLeft="766.69324864803,1204.91226883288">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,65.7933492759691"
              Start="0,0"
              End="0,58.2933492759691">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.2933492759691" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="346.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Updated Values to Audit Log for Timesheet FIXED"
          TopLeft="1074.43397709443,478.368414804739" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 13]"
          TopLeft="905.920902146712,547.803205271278">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="341.84640828105,-26.7681237998729"
              Start="0,0"
              End="341.84640828105,-19.2681237998729">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-9.38406189993646" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-9.38406189993646"
                    Point2="0,-13.3840618999365"
                    Point3="4,-13.3840618999365" />
                  <mssgle:LineSegment
                    End="337.84640828105,-13.3840618999365" />
                  <mssgle:CubicBezierSegment
                    Point1="337.84640828105,-13.3840618999365"
                    Point2="341.84640828105,-13.3840618999365"
                    Point3="341.84640828105,-17.3840618999365" />
                  <mssgle:LineSegment
                    End="341.84640828105,-19.2681237998729" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="266.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Timesheet into Audit table FIXED"
          TopLeft="1079.55550464326,308.556089282363" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 19]"
          TopLeft="1247.76731042776,478.368414804739">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-34.878472451172,-127.14565885571"
              Start="0,0"
              End="-34.878472451172,-119.64565885571">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-59.5728294278548" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-59.5728294278548"
                    Point2="0,-63.5728294278548"
                    Point3="-4,-63.5728294278548" />
                  <mssgle:LineSegment
                    End="-30.878472451172,-63.5728294278548" />
                  <mssgle:CubicBezierSegment
                    Point1="-30.878472451172,-63.5728294278548"
                    Point2="-34.878472451172,-63.5728294278548"
                    Point3="-34.878472451172,-67.5728294278548" />
                  <mssgle:LineSegment
                    End="-34.878472451172,-119.64565885571" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <NodeLayout
          Size="276,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Timesheet into Audit table FIXED 1"
          TopLeft="764.277740959493,228.556089599557" />
        <EdgeLayout
          Id="Package\Foreach Loop Container.PrecedenceConstraints[Constraint 11]"
          TopLeft="621.093230144581,380.563486898628">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="281.184510814912,-109.340730632404"
              Start="0,0"
              End="281.184510814912,-101.840730632404">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-50.670365316202" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-50.670365316202"
                    Point2="0,-54.670365316202"
                    Point3="4,-54.670365316202" />
                  <mssgle:LineSegment
                    End="277.184510814912,-54.670365316202" />
                  <mssgle:CubicBezierSegment
                    Point1="277.184510814912,-54.670365316202"
                    Point2="281.184510814912,-54.670365316202"
                    Point3="281.184510814912,-58.670365316202" />
                  <mssgle:LineSegment
                    End="281.184510814912,-101.840730632404" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="2176.66666666667,1470.66666666667"
          Size="2176.66666666667,1513.33333333334"
          Id="Package\Foreach Loop Container"
          TopLeft="58.6210291254677,46.9933161089183" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert Expenses Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="174.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Expenses Data\OLE DB Destination"
          TopLeft="272.624987917022,600.736833796442" />
        <NodeLayout
          Size="132,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Expenses Data\Row Count"
          TopLeft="416.999987572432,491.999985337258" />
        <NodeLayout
          Size="156,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Expenses Data\Derived Column"
          TopLeft="268.124988013879,265.473681295678" />
        <NodeLayout
          Size="142.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Expenses Data\Excel Source"
          TopLeft="284.161669198775,164.576906570402" />
        <NodeLayout
          Size="158.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Expenses Data\Data Conversion"
          TopLeft="266.249988097698,376.315785341811" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Expenses Data.Paths[Derived Column Output]"
          TopLeft="345.854154722455,308.140347962344">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,68.1754373794669"
              Start="0,0"
              End="0,60.6754373794669">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,60.6754373794669" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Expenses Data.Paths[Data Conversion Output]"
          TopLeft="345.583321431031,418.982452008478">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="137.416666141401,73.0175333287802"
              Start="0,0"
              End="137.416666141401,65.5175333287802">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.5087666643901" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.5087666643901"
                    Point2="0,36.5087666643901"
                    Point3="4,36.5087666643901" />
                  <mssgle:LineSegment
                    End="133.416666141401,36.5087666643901" />
                  <mssgle:CubicBezierSegment
                    Point1="133.416666141401,36.5087666643901"
                    Point2="137.416666141401,36.5087666643901"
                    Point3="137.416666141401,40.5087666643901" />
                  <mssgle:LineSegment
                    End="137.416666141401,65.5175333287802" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Expenses Data.Paths[Row Count Output 1]"
          TopLeft="482.999987572432,534.666652003925">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-123.041666322077,66.0701817925171"
              Start="0,0"
              End="-123.041666322077,58.5701817925171">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.0350908962586" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.0350908962586"
                    Point2="0,33.0350908962586"
                    Point3="-4,33.0350908962586" />
                  <mssgle:LineSegment
                    End="-119.041666322077,33.0350908962586" />
                  <mssgle:CubicBezierSegment
                    Point1="-119.041666322077,33.0350908962586"
                    Point2="-123.041666322077,33.0350908962586"
                    Point3="-123.041666322077,37.0350908962586" />
                  <mssgle:LineSegment
                    End="-123.041666322077,58.5701817925171" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Expenses Data.Paths[Excel Source Output]"
          TopLeft="355.495002532108,207.243573237068">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.3700145182296,58.2301080586093"
              Start="0,0"
              End="-9.3700145182296,50.7301080586093">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.1150540293046" />
                  <mssgle:CubicBezierSegment
                    Point1="0,25.1150540293046"
                    Point2="0,29.1150540293046"
                    Point3="-4,29.1150540293046" />
                  <mssgle:LineSegment
                    End="-5.3700145182296,29.1150540293046" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.3700145182296,29.1150540293046"
                    Point2="-9.3700145182296,29.1150540293046"
                    Point3="-9.3700145182296,33.1150540293046" />
                  <mssgle:LineSegment
                    End="-9.3700145182296,50.7301080586093" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\Insert Leave Data">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="165.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Leave Data\Derived Column 3"
          TopLeft="264.899992105365,218.599993485213" />
        <NodeLayout
          Size="132,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Leave Data\Row Count"
          TopLeft="299.333324412505,410.666654427847" />
        <NodeLayout
          Size="174.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination"
          TopLeft="260.199992237489,516.266651280721" />
        <NodeLayout
          Size="145.333333333334,66.6666666666667"
          Id="Package\Foreach Loop Container\Insert Leave Data\Leave Source"
          TopLeft="276.633325089018,92.0999972552062" />
        <NodeLayout
          Size="158.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\Insert Leave Data\Data Conversion"
          TopLeft="274.533325143655,315.199990606308" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Row Count Output 1]"
          TopLeft="365.333324412505,453.333321094513">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-17.7999988416824,62.9333301862079"
              Start="0,0"
              End="-17.7999988416824,55.4333301862079">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.4666650931039" />
                  <mssgle:CubicBezierSegment
                    Point1="0,27.4666650931039"
                    Point2="0,31.4666650931039"
                    Point3="-4,31.4666650931039" />
                  <mssgle:LineSegment
                    End="-13.7999988416824,31.4666650931039" />
                  <mssgle:CubicBezierSegment
                    Point1="-13.7999988416824,31.4666650931039"
                    Point2="-17.7999988416824,31.4666650931039"
                    Point3="-17.7999988416824,35.4666650931039" />
                  <mssgle:LineSegment
                    End="-17.7999988416824,55.4333301862079" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Excel Source Output]"
          TopLeft="348.433325263858,158.766663921873">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.8333295633396"
              Start="0,0"
              End="0,52.3333295633396">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.3333295633396" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Derived Column Output]"
          TopLeft="350.71665862451,261.266660151879">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.9333304544289"
              Start="0,0"
              End="0,46.4333304544289">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.4333304544289" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\Insert Leave Data.Paths[Data Conversion Output]"
          TopLeft="353.866658476988,357.866657272975">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="11.4666659355167,52.7999971548719"
              Start="0,0"
              End="11.4666659355167,45.2999971548719">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,22.399998577436" />
                  <mssgle:CubicBezierSegment
                    Point1="0,22.399998577436"
                    Point2="0,26.399998577436"
                    Point3="4,26.399998577436" />
                  <mssgle:LineSegment
                    End="7.46666593551674,26.399998577436" />
                  <mssgle:CubicBezierSegment
                    Point1="7.46666593551674,26.399998577436"
                    Point2="11.4666659355167,26.399998577436"
                    Point3="11.4666659355167,30.399998577436" />
                  <mssgle:LineSegment
                    End="11.4666659355167,45.2999971548719" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Leave Data\Leave Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\Insert Leave Data\OLE DB Destination">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\InsertClients">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="114.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertClients\Lookup"
          TopLeft="221.249990109355,487.842099906748" />
        <NodeLayout
          Size="158.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertClients\Data Conversion"
          TopLeft="204.999990835786,373.578943266598" />
        <NodeLayout
          Size="132,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertClients\Row Count"
          TopLeft="490.624978067354,552.842099193061" />
        <NodeLayout
          Size="142.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertClients\Excel Source"
          TopLeft="205.874990781769,190.39473476102" />
        <NodeLayout
          Size="174.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertClients\OLE DB Destination"
          TopLeft="188.749991562218,620.578940554587" />
        <NodeLayout
          Size="157.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertClients\Conditional Split"
          TopLeft="204.374990863726,271.631575964907" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertClients.Paths[Lookup No Match Output]"
          TopLeft="335.916656776022,509.175433240081">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="154.708321291332,64.999999286313"
              Start="0,0"
              End="147.208321291332,64.999999286313">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="73.3541606456662,0" />
                  <mssgle:CubicBezierSegment
                    Point1="73.3541606456662,0"
                    Point2="77.3541606456662,0"
                    Point3="77.3541606456662,4" />
                  <mssgle:LineSegment
                    End="77.3541606456662,60.999999286313" />
                  <mssgle:CubicBezierSegment
                    Point1="77.3541606456662,60.999999286313"
                    Point2="77.3541606456662,64.999999286313"
                    Point3="81.3541606456662,64.999999286313" />
                  <mssgle:LineSegment
                    End="147.208321291332,64.999999286313" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="21.5477739269162,-17.609375,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertClients.Paths[Excel Source Output]"
          TopLeft="280.124990822748,233.061401427687">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.5701745372202"
              Start="0,0"
              End="0,31.0701745372202">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.0701745372202" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertClients.Paths[Data Conversion Output]"
          TopLeft="281.458323805904,416.245609933265">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.596489973483"
              Start="0,0"
              End="0,64.096489973483">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,64.096489973483" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertClients.Paths[ValidatedClients]"
          TopLeft="283.687490849756,314.298242631574">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.2807006350239"
              Start="0,0"
              End="0,51.7807006350239">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.7807006350239" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-35.89576171875,21.0158385987619,71.7915234375,9.7490234375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertClients.Paths[Row Count Output 1]"
          TopLeft="556.624978067354,595.508765859727">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-280.541653171803,25.0701746948597"
              Start="0,0"
              End="-280.541653171803,17.5701746948597">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.53508734742985" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.53508734742985"
                    Point2="0,12.5350873474299"
                    Point3="-4,12.5350873474299" />
                  <mssgle:LineSegment
                    End="-276.541653171803,12.5350873474299" />
                  <mssgle:CubicBezierSegment
                    Point1="-276.541653171803,12.5350873474299"
                    Point2="-280.541653171803,12.5350873474299"
                    Point3="-280.541653171803,16.5350873474299" />
                  <mssgle:LineSegment
                    End="-280.541653171803,17.5701746948597" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\InsertDescriptions">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="114.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertDescriptions\Lookup"
          TopLeft="242.499992772937,550.666650245587" />
        <NodeLayout
          Size="158.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertDescriptions\Data Conversion"
          TopLeft="225.999993264675,435.166653687756" />
        <NodeLayout
          Size="132,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertDescriptions\Row Count"
          TopLeft="395.499988213182,627.666648159425" />
        <NodeLayout
          Size="142.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertDescriptions\Excel Source"
          TopLeft="236.79999294281,167.599995005131" />
        <NodeLayout
          Size="174.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertDescriptions\OLE DB Destination"
          TopLeft="205.499993875623,700.166645790141" />
        <NodeLayout
          Size="157.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertDescriptions\Conditional Split"
          TopLeft="221.599993395806,341.599989819527" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertDescriptions.Paths[Lookup No Match Output]"
          TopLeft="299.83332610627,593.333316912254">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="161.666662106911,34.3333312471714"
              Start="0,0"
              End="161.666662106911,26.8333312471714">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.1666656235857" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.1666656235857"
                    Point2="0,17.1666656235857"
                    Point3="4,17.1666656235857" />
                  <mssgle:LineSegment
                    End="157.666662106911,17.1666656235857" />
                  <mssgle:CubicBezierSegment
                    Point1="157.666662106911,17.1666656235857"
                    Point2="161.666662106911,17.1666656235857"
                    Point3="161.666662106911,21.1666656235857" />
                  <mssgle:LineSegment
                    End="161.666662106911,26.8333312471714" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="25.0269443347055,22.1666656235857,111.6127734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertDescriptions.Paths[Excel Source Output]"
          TopLeft="304.199993169308,210.266661671798">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,131.333328147729"
              Start="0,0"
              End="0,123.833328147729">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,123.833328147729" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertDescriptions.Paths[Data Conversion Output]"
          TopLeft="302.583326352139,477.833320354422">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,72.8333298911651"
              Start="0,0"
              End="0,65.3333298911651">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,65.3333298911651" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertDescriptions.Paths[ValidDescriptions]"
          TopLeft="302.79999333024,384.266656486194">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,50.899997201562"
              Start="0,0"
              End="0,43.399997201562">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,43.399997201562" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-38.40576171875,15.895311100781,76.8115234375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertDescriptions.Paths[Row Count Output 1]"
          TopLeft="461.499988213182,670.333314826092">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-168.666661004226,29.833330964049"
              Start="0,0"
              End="-168.666661004226,22.333330964049">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,10.9166654820245" />
                  <mssgle:CubicBezierSegment
                    Point1="0,10.9166654820245"
                    Point2="0,14.9166654820245"
                    Point3="-4,14.9166654820245" />
                  <mssgle:LineSegment
                    End="-164.666661004226,14.9166654820245" />
                  <mssgle:CubicBezierSegment
                    Point1="-164.666661004226,14.9166654820245"
                    Point2="-168.666661004226,14.9166654820245"
                    Point3="-168.666661004226,18.9166654820245" />
                  <mssgle:LineSegment
                    End="-168.666661004226,22.333330964049" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="0,0,0,0"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <TaskHost
    design-time-name="Package\Foreach Loop Container\InsertTimesheet">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mssgm="clr-namespace:Microsoft.SqlServer.Graph.Model;assembly=Microsoft.SqlServer.Graph">
        <NodeLayout
          Size="156,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Derived Column"
          TopLeft="411.897423621936,185.692302158245" />
        <NodeLayout
          Size="224,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Derived Column – With Lookup"
          TopLeft="383.315461590975,600.695467644451" />
        <NodeLayout
          Size="142.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Excel Source"
          TopLeft="421.51280795076,67.3846133763974" />
        <NodeLayout
          Size="158.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Data Conversion"
          TopLeft="409.230757034742,282.820504391805" />
        <NodeLayout
          Size="237.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Desc No Match"
          TopLeft="714.107113360827,485.118543730908" />
        <NodeLayout
          Size="241.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Derived Column – Client No Match"
          TopLeft="990.791624202706,388.736839380455" />
        <NodeLayout
          Size="122.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Union All"
          TopLeft="465.624981122092,817.087711895327" />
        <NodeLayout
          Size="165.333333333334,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Derived Column 1"
          TopLeft="457.999986350537,904.666640023391" />
        <NodeLayout
          Size="184,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Description ID Lookup"
          TopLeft="399.478006831647,486.673398272959" />
        <NodeLayout
          Size="132,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\Row Count"
          TopLeft="719.230747796023,941.53843347843" />
        <NodeLayout
          Size="156,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\ClientID Lookup"
          TopLeft="410.769218974388,385.379205634216" />
        <NodeLayout
          Size="174.666666666667,42.6666666666667"
          Id="Package\Foreach Loop Container\InsertTimesheet\OLE DB Destination"
          TopLeft="392.985332622688,1053.9120564702" />
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Union All Output 1]"
          TopLeft="526.958314455425,859.754378561994">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="13.708338561778,44.9122614613974"
              Start="0,0"
              End="13.708338561778,37.4122614613974">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.4561307306987" />
                  <mssgle:CubicBezierSegment
                    Point1="0,18.4561307306987"
                    Point2="0,22.4561307306987"
                    Point3="4,22.4561307306987" />
                  <mssgle:LineSegment
                    End="9.70833856177796,22.4561307306987" />
                  <mssgle:CubicBezierSegment
                    Point1="9.70833856177796,22.4561307306987"
                    Point2="13.708338561778,22.4561307306987"
                    Point3="13.708338561778,26.4561307306987" />
                  <mssgle:LineSegment
                    End="13.708338561778,37.4122614613974" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Row Count Output 1]"
          TopLeft="785.230747796023,984.205100145096">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-304.912081840001,69.7069563251004"
              Start="0,0"
              End="-304.912081840001,62.2069563251004">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.8534781625502" />
                  <mssgle:CubicBezierSegment
                    Point1="0,30.8534781625502"
                    Point2="0,34.8534781625502"
                    Point3="-4,34.8534781625502" />
                  <mssgle:LineSegment
                    End="-300.912081840001,34.8534781625502" />
                  <mssgle:CubicBezierSegment
                    Point1="-300.912081840001,34.8534781625502"
                    Point2="-304.912081840001,34.8534781625502"
                    Point3="-304.912081840001,38.8534781625502" />
                  <mssgle:LineSegment
                    End="-304.912081840001,62.2069563251004" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Lookup Match Output1]"
          TopLeft="490.123612903018,428.045872300882">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,58.6275259720767"
              Start="0,0"
              End="0,51.1275259720767">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.1275259720767" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,19.7590754860383,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Lookup Match Output]"
          TopLeft="493.396734211311,529.340064939626">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,71.355402704825"
              Start="0,0"
              End="0,63.855402704825">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,63.855402704825" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="-48.19138671875,26.1230138524125,96.3827734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Lookup Error Output1]"
          TopLeft="583.478006831647,507.229304335267">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="130.62910652918,0"
              Start="0,0"
              End="123.12910652918,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="123.12910652918,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="15.69816654584,5,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Lookup Error Output]"
          TopLeft="566.769218974388,408.391355840669">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="424.022405228317,0"
              Start="0,0"
              End="416.522405228317,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="416.522405228317,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <mssgm:EdgeLabel
              BoundingBox="162.394815895408,5,91.7327734375,11.609375"
              RelativePosition="Any" />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Excel Source Output]"
          TopLeft="491.371782453015,110.051280043064">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,75.641022115181"
              Start="0,0"
              End="0,68.141022115181">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,68.141022115181" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output4]"
          TopLeft="623.33331968387,925.999973356724">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="95.8974281121523,36.8717934550386"
              Start="0,0"
              End="88.3974281121523,36.8717934550386">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.9487140560761,0" />
                  <mssgle:CubicBezierSegment
                    Point1="43.9487140560761,0"
                    Point2="47.9487140560761,0"
                    Point3="47.9487140560761,4" />
                  <mssgle:LineSegment
                    End="47.9487140560761,32.8717934550386" />
                  <mssgle:CubicBezierSegment
                    Point1="47.9487140560761,32.8717934550386"
                    Point2="47.9487140560761,36.8717934550386"
                    Point3="51.9487140560761,36.8717934550386" />
                  <mssgle:LineSegment
                    End="88.3974281121523,36.8717934550386" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output3]"
          TopLeft="1111.45829086937,431.403506047122">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-555.83330974728,385.684205848205"
              Start="0,0"
              End="-555.83330974728,378.184205848205">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,274.985438462246" />
                  <mssgle:CubicBezierSegment
                    Point1="0,274.985438462246"
                    Point2="0,278.985438462246"
                    Point3="-4,278.985438462246" />
                  <mssgle:LineSegment
                    End="-551.83330974728,278.985438462246" />
                  <mssgle:CubicBezierSegment
                    Point1="-551.83330974728,278.985438462246"
                    Point2="-555.83330974728,278.985438462246"
                    Point3="-555.83330974728,282.985438462246" />
                  <mssgle:LineSegment
                    End="-555.83330974728,378.184205848205" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output2]"
          TopLeft="832.773780027494,527.785210397575">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-305.815465572068,289.302501497752"
              Start="0,0"
              End="-305.815465572068,281.802501497752">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,140.651250748876" />
                  <mssgle:CubicBezierSegment
                    Point1="0,140.651250748876"
                    Point2="0,144.651250748876"
                    Point3="-4,144.651250748876" />
                  <mssgle:LineSegment
                    End="-301.815465572068,144.651250748876" />
                  <mssgle:CubicBezierSegment
                    Point1="-301.815465572068,144.651250748876"
                    Point2="-305.815465572068,144.651250748876"
                    Point3="-305.815465572068,148.651250748876" />
                  <mssgle:LineSegment
                    End="-305.815465572068,281.802501497752" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output1]"
          TopLeft="496.803554689867,643.362134311117">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,173.725577584209"
              Start="0,0"
              End="0,166.225577584209">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,166.225577584209" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Derived Column Output]"
          TopLeft="489.230756995006,228.358968824912">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,54.4615355668932"
              Start="0,0"
              End="0,46.9615355668932">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,46.9615355668932" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Foreach Loop Container\InsertTimesheet.Paths[Data Conversion Output]"
          TopLeft="488.666654671232,325.487171058472">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,59.8920345757438"
              Start="0,0"
              End="0,52.3920345757438">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,52.3920345757438" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Foreach Loop Container\InsertTimesheet\Excel Source">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>